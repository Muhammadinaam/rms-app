{"version":3,"sources":["./node_modules/moment/locale ^\\.\\/.*$","./src/$_lazy_route_resource lazy","./src/app/adminlte-components/box/box.component.css","./src/app/adminlte-components/box/box.component.html","./src/app/adminlte-components/box/box.component.ts","./src/app/adminlte/content/content.component.css","./src/app/adminlte/content/content.component.html","./src/app/adminlte/content/content.component.ts","./src/app/adminlte/footer/footer.component.css","./src/app/adminlte/footer/footer.component.html","./src/app/adminlte/footer/footer.component.ts","./src/app/adminlte/header/header.component.css","./src/app/adminlte/header/header.component.html","./src/app/adminlte/header/header.component.ts","./src/app/adminlte/sidebar/sidebar.component.css","./src/app/adminlte/sidebar/sidebar.component.html","./src/app/adminlte/sidebar/sidebar.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/change-password/change-password.component.css","./src/app/change-password/change-password.component.html","./src/app/change-password/change-password.component.ts","./src/app/dates-filter/dates-filter.component.css","./src/app/dates-filter/dates-filter.component.html","./src/app/dates-filter/dates-filter.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/interceptors/auth-interceptor.service.ts","./src/app/interceptors/loader-interceptor.service.ts","./src/app/invoices-printing/invoices-printing.component.css","./src/app/invoices-printing/invoices-printing.component.html","./src/app/invoices-printing/invoices-printing.component.ts","./src/app/item/item.component.css","./src/app/item/item.component.html","./src/app/item/item.component.ts","./src/app/items/items.component.css","./src/app/items/items.component.html","./src/app/items/items.component.ts","./src/app/keys.pipe.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/open-order/open-order.component.css","./src/app/open-order/open-order.component.html","./src/app/open-order/open-order.component.ts","./src/app/order/order.component.css","./src/app/order/order.component.html","./src/app/order/order.component.ts","./src/app/reports/cancelled-orders-report/cancelled-orders-report.component.css","./src/app/reports/cancelled-orders-report/cancelled-orders-report.component.html","./src/app/reports/cancelled-orders-report/cancelled-orders-report.component.ts","./src/app/reports/collection-report/collection-report.component.css","./src/app/reports/collection-report/collection-report.component.html","./src/app/reports/collection-report/collection-report.component.ts","./src/app/reports/edits-after-print/edits-after-print.component.css","./src/app/reports/edits-after-print/edits-after-print.component.html","./src/app/reports/edits-after-print/edits-after-print.component.ts","./src/app/reports/items-list-dialog/items-list-dialog.component.css","./src/app/reports/items-list-dialog/items-list-dialog.component.html","./src/app/reports/items-list-dialog/items-list-dialog.component.ts","./src/app/reports/rating-add-edit/rating-add-edit.component.css","./src/app/reports/rating-add-edit/rating-add-edit.component.html","./src/app/reports/rating-add-edit/rating-add-edit.component.ts","./src/app/reports/rating-report/rating-report.component.css","./src/app/reports/rating-report/rating-report.component.html","./src/app/reports/rating-report/rating-report.component.ts","./src/app/reports/sales-by-item-report/sales-by-item-report.component.css","./src/app/reports/sales-by-item-report/sales-by-item-report.component.html","./src/app/reports/sales-by-item-report/sales-by-item-report.component.ts","./src/app/reports/sales-by-order-report/sales-by-order-report.component.css","./src/app/reports/sales-by-order-report/sales-by-order-report.component.html","./src/app/reports/sales-by-order-report/sales-by-order-report.component.ts","./src/app/reports/summary/summary.component.css","./src/app/reports/summary/summary.component.html","./src/app/reports/summary/summary.component.ts","./src/app/reports/top-least-items-report/top-least-items-report.component.css","./src/app/reports/top-least-items-report/top-least-items-report.component.html","./src/app/reports/top-least-items-report/top-least-items-report.component.ts","./src/app/reports/x-report/x-report.component.css","./src/app/reports/x-report/x-report.component.html","./src/app/reports/x-report/x-report.component.ts","./src/app/services/auth-guard.service.ts","./src/app/services/auth.service.ts","./src/app/services/config.service.ts","./src/app/services/helper.service.ts","./src/app/services/items.service.ts","./src/app/services/orders.service.ts","./src/app/services/reports.service.ts","./src/app/services/settings.service.ts","./src/app/services/tables.service.ts","./src/app/services/users.service.ts","./src/app/settings/settings.component.css","./src/app/settings/settings.component.html","./src/app/settings/settings.component.ts","./src/app/table/table.component.css","./src/app/table/table.component.html","./src/app/table/table.component.ts","./src/app/tables-and-orders/tables-and-orders.component.css","./src/app/tables-and-orders/tables-and-orders.component.html","./src/app/tables-and-orders/tables-and-orders.component.ts","./src/app/tables/tables.component.css","./src/app/tables/tables.component.html","./src/app/tables/tables.component.ts","./src/app/user-form/user-form.component.css","./src/app/user-form/user-form.component.html","./src/app/user-form/user-form.component.ts","./src/app/users/users.component.css","./src/app/users/users.component.html","./src/app/users/users.component.ts","./src/assets/config.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale recursive ^\\\\.\\\\/.*$\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = ./node_modules/moment/locale recursive ^\\.\\/.*$\n// module chunks = main","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/adminlte-components/box/box.component.css\n// module id = ./src/app/adminlte-components/box/box.component.css\n// module chunks = main","module.exports = \"<div class=\\\"box box-{{type}}\\\">\\r\\n  <div *ngIf=\\\"title != ''\\\" class=\\\"box-header with-border\\\">\\r\\n    <h3 class=\\\"box-title\\\">{{title}}</h3>\\r\\n  </div>\\r\\n  <div class=\\\"box-body\\\">\\r\\n      <ng-content></ng-content>\\r\\n  </div>  \\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/adminlte-components/box/box.component.html\n// module id = ./src/app/adminlte-components/box/box.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-box',\r\n  templateUrl: './box.component.html',\r\n  styleUrls: ['./box.component.css']\r\n})\r\nexport class BoxComponent implements OnInit {\r\n\r\n  @Input() type:string = \"\";\r\n  @Input() title:string = \"\";\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/adminlte-components/box/box.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/adminlte/content/content.component.css\n// module id = ./src/app/adminlte/content/content.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n    <h1>\\r\\n        Dashboard\\r\\n        <small>Version 2.0</small>\\r\\n    </h1>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-primary\\\">\\r\\n\\r\\n                <div class=\\\"box-body\\\">\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/adminlte/content/content.component.html\n// module id = ./src/app/adminlte/content/content.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-content',\r\n  templateUrl: './content.component.html',\r\n  styleUrls: ['./content.component.css']\r\n})\r\nexport class ContentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/adminlte/content/content.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/adminlte/footer/footer.component.css\n// module id = ./src/app/adminlte/footer/footer.component.css\n// module chunks = main","module.exports = \"<footer class=\\\"main-footer hidden-print\\\">\\r\\n    <div class=\\\"pull-right hidden-xs\\\">\\r\\n        <b>Version</b> 1.0\\r\\n    </div>\\r\\n    <strong>Copyright &copy; 2018 <a href=\\\"https://akonto.ltd\\\">Akonto</a>.</strong> All rights reserved.\\r\\n</footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/adminlte/footer/footer.component.html\n// module id = ./src/app/adminlte/footer/footer.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/adminlte/footer/footer.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/adminlte/header/header.component.css\n// module id = ./src/app/adminlte/header/header.component.css\n// module chunks = main","module.exports = \"<header class=\\\"main-header\\\">\\r\\n\\r\\n    <!-- Logo -->\\r\\n    <a href=\\\"index2.html\\\" class=\\\"logo\\\">\\r\\n        <!-- mini logo for sidebar mini 50x50 pixels -->\\r\\n        <!-- <span class=\\\"logo-mini\\\"><b>A</b> R</span> -->\\r\\n        <!-- logo for regular state and mobile devices -->\\r\\n        <span class=\\\"logo-lg\\\"><b>Akonxo</b> RMS</span>\\r\\n    </a>\\r\\n\\r\\n    <!-- Header Navbar: style can be found in header.less -->\\r\\n    <nav class=\\\"navbar navbar-static-top\\\">\\r\\n        <!-- Sidebar toggle button-->\\r\\n        <a href=\\\"#\\\" class=\\\"sidebar-toggle\\\" data-toggle=\\\"push-menu\\\" role=\\\"button\\\">\\r\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n        </a>\\r\\n        <!-- Navbar Right Menu -->\\r\\n        <div class=\\\"navbar-custom-menu\\\">\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n\\r\\n                <li>\\r\\n                    <a routerLink=\\\"/table-and-orders\\\" style=\\\"background-color: rgb(233, 80, 80);\\\" class=\\\"btn btn-danger\\\"> <i class=\\\"fa fa-table\\\"></i> Tables and Orders</a>\\r\\n                </li>\\r\\n\\r\\n                <!-- User Account: style can be found in dropdown.less -->\\r\\n                <li class=\\\"dropdown user user-menu\\\">\\r\\n                    <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                        <img src=\\\"assets/dist/img/user2-160x160.jpg\\\" class=\\\"user-image\\\" alt=\\\"User Image\\\">\\r\\n                        <span class=\\\"hidden-xs\\\">{{user?.name}}</span>\\r\\n                    </a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                        <!-- User image -->\\r\\n                        <li class=\\\"user-header\\\">\\r\\n                            <img src=\\\"assets/dist/img/user2-160x160.jpg\\\" class=\\\"img-circle\\\" alt=\\\"User Image\\\">\\r\\n\\r\\n                            <p>\\r\\n                                {{user?.name}}\\r\\n                                <!-- <small>Member since Nov. 2012</small> -->\\r\\n                            </p>\\r\\n                        </li>\\r\\n                        <!-- Menu Body -->\\r\\n\\r\\n                        <!-- Menu Footer-->\\r\\n                        <li class=\\\"user-footer\\\">\\r\\n                            <div class=\\\"pull-left\\\">\\r\\n                                <a routerLink=\\\"/change-password\\\" class=\\\"btn btn-default btn-flat\\\"> <i class=\\\"fa fa-key\\\"></i> Change Password</a>\\r\\n                            </div>\\r\\n                            <div class=\\\"pull-right\\\">\\r\\n                                <a (click)=\\\"logoutBtnClicked()\\\" class=\\\"btn btn-default btn-flat\\\">Sign out</a>\\r\\n                            </div>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n\\r\\n            </ul>\\r\\n        </div>\\r\\n\\r\\n    </nav>\\r\\n</header>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/adminlte/header/header.component.html\n// module id = ./src/app/adminlte/header/header.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  user:any;\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.getLoggedInUserInfo()\r\n      .subscribe(\r\n        (data)=>{\r\n          this.user = data;\r\n        }\r\n      )\r\n  }\r\n\r\n  logoutBtnClicked()\r\n  {\r\n    this.authService.logout();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/adminlte/header/header.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/adminlte/sidebar/sidebar.component.css\n// module id = ./src/app/adminlte/sidebar/sidebar.component.css\n// module chunks = main","module.exports = \"<!-- Left side column. contains the logo and sidebar -->\\r\\n<aside class=\\\"main-sidebar\\\">\\r\\n    <!-- sidebar: style can be found in sidebar.less -->\\r\\n    <section class=\\\"sidebar\\\">\\r\\n        <!-- Sidebar user panel -->\\r\\n        <div class=\\\"user-panel\\\">\\r\\n            <div class=\\\"pull-left image\\\">\\r\\n                <img src=\\\"assets/dist/img/user2-160x160.jpg\\\" class=\\\"img-circle\\\" alt=\\\"User Image\\\">\\r\\n            </div>\\r\\n            <div class=\\\"pull-left info\\\">\\r\\n                <p>{{user?.name}}</p>\\r\\n                <a href=\\\"#\\\"><i class=\\\"fa fa-circle text-success\\\"></i> Online</a>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- sidebar menu: : style can be found in sidebar.less -->\\r\\n        <ul class=\\\"sidebar-menu\\\" data-widget=\\\"tree\\\">\\r\\n\\r\\n            <!-- <li class=\\\"header\\\">MAIN NAVIGATION</li> -->\\r\\n\\r\\n            <ng-template [ngIf]=\\\"menus != null\\\">\\r\\n                <ng-container *ngFor=\\\"let menu of menus\\\">\\r\\n\\r\\n                    <ng-template [ngIf]=\\\"menu.children == null\\\">\\r\\n                        <li>\\r\\n                            <a routerLink=\\\"/{{menu.url}}\\\">\\r\\n                                <i class=\\\"{{menu.icon}}\\\"></i> <span>{{menu.name}}</span>\\r\\n                            </a>\\r\\n                        </li>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template [ngIf]=\\\"menu.children != null\\\">\\r\\n                        <li class=\\\"treeview\\\">\\r\\n                            <a href=\\\"#\\\">\\r\\n                                <i class=\\\"{{menu.icon}}\\\"></i> <span>{{menu.name}}</span>\\r\\n                            </a>\\r\\n                            <ul class=\\\"treeview-menu\\\">\\r\\n\\r\\n                                <ng-container *ngFor=\\\"let child_menu of menu.children\\\">\\r\\n                                    <li><a routerLink=\\\"/{{child_menu.url}}\\\"><i class=\\\"{{child_menu.icon}}\\\"></i> {{child_menu.name}}</a></li>\\r\\n                                </ng-container>\\r\\n\\r\\n                            </ul>\\r\\n                        </li>\\r\\n                    </ng-template>\\r\\n\\r\\n                </ng-container>\\r\\n            </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n            <!-- \\r\\n      <li class=\\\"treeview\\\">\\r\\n        <a href=\\\"#\\\">\\r\\n          <i class=\\\"fa fa-dashboard\\\"></i> <span>Dashboard</span>\\r\\n        </a>\\r\\n        <ul class=\\\"treeview-menu\\\">\\r\\n          <li><a href=\\\"index.html\\\"><i class=\\\"fa fa-circle-o\\\"></i> Dashboard v1</a></li>\\r\\n          <li><a href=\\\"index2.html\\\"><i class=\\\"fa fa-circle-o\\\"></i> Dashboard v2</a></li>\\r\\n        </ul>\\r\\n      </li>\\r\\n      \\r\\n      <li>\\r\\n        <a href=\\\"https://adminlte.io/docs\\\">\\r\\n          <i class=\\\"fa fa-book\\\"></i> <span>Documentation</span>\\r\\n        </a>\\r\\n      </li> \\r\\n      -->\\r\\n\\r\\n        </ul>\\r\\n    </section>\\r\\n    <!-- /.sidebar -->\\r\\n</aside>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/adminlte/sidebar/sidebar.component.html\n// module id = ./src/app/adminlte/sidebar/sidebar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ConfigService } from '../../services/config.service';\r\nimport 'rxjs/add/operator/retryWhen';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  user:any;\r\n  menus:any;\r\n\r\n  constructor(private authService: AuthService, private http:HttpClient, private config:ConfigService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.authService.getLoggedInUserInfo()\r\n      .subscribe(\r\n        (data)=>{\r\n          this.user = data;\r\n        }\r\n      );\r\n\r\n    this.http.get(this.config.base_url + '/api/get-menus')\r\n      //.retryWhen( error => error.delay(2000) )\r\n      .subscribe(\r\n        (data)=>{\r\n          this.menus = data;\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/adminlte/sidebar/sidebar.component.ts","import { NgModule }             from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { TablesAndOrdersComponent } from './tables-and-orders/tables-and-orders.component';\r\nimport { AuthGuardService } from './services/auth-guard.service';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { UserFormComponent } from './user-form/user-form.component';\r\nimport { TablesComponent } from './tables/tables.component';\r\nimport { TableComponent } from './table/table.component';\r\nimport { ItemsComponent } from './items/items.component';\r\nimport { ItemComponent } from './item/item.component';\r\nimport { OrderComponent } from './order/order.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CollectionReportComponent } from './reports/collection-report/collection-report.component';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { SalesByItemReportComponent } from './reports/sales-by-item-report/sales-by-item-report.component';\r\nimport { SalesByOrderReportComponent } from './reports/sales-by-order-report/sales-by-order-report.component';\r\nimport { EditsAfterPrintComponent } from './reports/edits-after-print/edits-after-print.component';\r\nimport { CancelledOrdersReportComponent } from './reports/cancelled-orders-report/cancelled-orders-report.component';\r\nimport { InvoicesPrintingComponent } from './invoices-printing/invoices-printing.component';\r\nimport { XReportComponent } from './reports/x-report/x-report.component';\r\nimport { TopLeastItemsReportComponent } from './reports/top-least-items-report/top-least-items-report.component';\r\nimport { RatingReportComponent } from './reports/rating-report/rating-report.component';\r\nimport { RatingAddEditComponent } from './reports/rating-add-edit/rating-add-edit.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n    canActivate: [AuthGuardService],\r\n    children: [\r\n\r\n      { path: 'change-password', component: ChangePasswordComponent},\r\n      \r\n      { path: 'table-and-orders', component: TablesAndOrdersComponent },\r\n      { path: 'add-order', component: OrderComponent },\r\n      { path: 'edit-order/:id', component: OrderComponent },\r\n      \r\n      { path: 'settings', component: SettingsComponent },\r\n      \r\n      { path: 'users', component: UsersComponent},\r\n      { path: 'user', component: UserFormComponent},\r\n      { path: 'user/:id', component: UserFormComponent},\r\n\r\n      { path: 'tables', component: TablesComponent},\r\n      { path: 'table', component: TableComponent},\r\n      { path: 'table/:id', component: TableComponent},\r\n\r\n      { path: 'items', component: ItemsComponent},\r\n      { path: 'item', component: ItemComponent},\r\n      { path: 'item/:id', component: ItemComponent},\r\n\r\n      { path: 'sales-by-item-report', component: SalesByItemReportComponent },\r\n      { path: 'sales-by-order-report', component: SalesByOrderReportComponent },\r\n      { path: 'edits-after-print-report', component: EditsAfterPrintComponent },\r\n      { path: 'cancelled-orders-report', component: CancelledOrdersReportComponent },\r\n      { path: 'collection-report', component: CollectionReportComponent },\r\n      { path: 'invoices-printing', component: InvoicesPrintingComponent },\r\n      { path: 'top-least-selling-items-report', component: TopLeastItemsReportComponent },\r\n      { path: 'x-report', component: XReportComponent },\r\n      { path: 'rating-report', component: RatingReportComponent },\r\n      { path: 'rating-add-edit', component: RatingAddEditComponent },\r\n    ]\r\n  }\r\n\r\n  \r\n];\r\n\r\n@NgModule({\r\n  exports: [ RouterModule ],\r\n  imports: [ RouterModule.forRoot(routes, {useHash:true}) ],\r\n})\r\nexport class AppRoutingModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<ng2-slim-loading-bar></ng2-slim-loading-bar>\\r\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, HostListener , OnInit } from '@angular/core';\r\nimport { SlimLoadingBarService } from 'ng2-slim-loading-bar';\r\nimport { AuthService } from './services/auth.service';\r\nimport { Router } from '@angular/router';\r\ndeclare var $:any;\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  is_logged_in = false;\r\n\r\n  @HostListener(\"window:onbeforeunload\",[\"$event\"])\r\n  clearLocalStorage(event){\r\n    localStorage.clear();\r\n  }\r\n\r\n  constructor(private _loadingBar: SlimLoadingBarService, private authService: AuthService, private router: Router) { \r\n\r\n    this.router.events.subscribe(\r\n      (event)=>{\r\n        this.is_logged_in = this.authService.isLoggedIn();\r\n        $(document).ready(function(){\r\n          $(window).resize();\r\n        })    \r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    \r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { SlimLoadingBarModule } from \"ng2-slim-loading-bar\";\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { DataTableModule, Button } from 'primeng/primeng';\r\nimport {DialogModule} from 'primeng/dialog';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { NgPipesModule } from 'ngx-pipes';\r\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\r\nimport {ChartModule} from 'primeng/chart';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './adminlte/header/header.component';\r\nimport { SidebarComponent } from './adminlte/sidebar/sidebar.component';\r\nimport { FooterComponent } from './adminlte/footer/footer.component';\r\nimport { ContentComponent } from './adminlte/content/content.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ConfigService } from './services/config.service';\r\nimport { LoaderInterceptorService } from './interceptors/loader-interceptor.service';\r\nimport { AuthInterceptorService } from './interceptors/auth-interceptor.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { TablesAndOrdersComponent } from './tables-and-orders/tables-and-orders.component';\r\nimport { AuthGuardService } from './services/auth-guard.service';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { UserFormComponent } from './user-form/user-form.component';\r\nimport { UsersService } from './services/users.service';\r\nimport { KeysPipe } from './keys.pipe';\r\nimport { TablesComponent } from './tables/tables.component';\r\nimport { TableComponent } from './table/table.component';\r\nimport { TablesService } from './services/tables.service';\r\nimport { ItemsService } from './services/items.service';\r\nimport { ItemsComponent } from './items/items.component';\r\nimport { ItemComponent } from './item/item.component';\r\nimport { OrderComponent } from './order/order.component';\r\nimport { OrdersService } from './services/orders.service';\r\nimport { OpenOrderComponent } from './open-order/open-order.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { SettingsService } from './services/settings.service';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CollectionReportComponent } from './reports/collection-report/collection-report.component';\r\nimport { ReportsService } from './services/reports.service';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { DatesFilterComponent } from './dates-filter/dates-filter.component';\r\nimport { SalesByItemReportComponent } from './reports/sales-by-item-report/sales-by-item-report.component';\r\nimport { HelperService } from './services/helper.service';\r\nimport { SalesByOrderReportComponent } from './reports/sales-by-order-report/sales-by-order-report.component';\r\nimport { SummaryComponent } from './reports/summary/summary.component';\r\nimport { EditsAfterPrintComponent } from './reports/edits-after-print/edits-after-print.component';\r\nimport { CancelledOrdersReportComponent } from './reports/cancelled-orders-report/cancelled-orders-report.component';\r\nimport { InvoicesPrintingComponent } from './invoices-printing/invoices-printing.component';\r\nimport { TopLeastItemsReportComponent } from './reports/top-least-items-report/top-least-items-report.component';\r\nimport { XReportComponent } from './reports/x-report/x-report.component';\r\nimport { BoxComponent } from './adminlte-components/box/box.component';\r\nimport { RatingReportComponent } from './reports/rating-report/rating-report.component';\r\nimport { RatingAddEditComponent } from './reports/rating-add-edit/rating-add-edit.component';\nimport { ItemsListDialogComponent } from './reports/items-list-dialog/items-list-dialog.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    SidebarComponent,\r\n    FooterComponent,\r\n    ContentComponent,\r\n    LoginComponent,\r\n    TablesAndOrdersComponent,\r\n    UsersComponent,\r\n    UserFormComponent,\r\n    KeysPipe,\r\n    TablesComponent,\r\n    TableComponent,\r\n    ItemsComponent,\r\n    ItemComponent,\r\n    OrderComponent,\r\n    OpenOrderComponent,\r\n    SettingsComponent,\r\n    HomeComponent,\r\n    CollectionReportComponent,\r\n    ChangePasswordComponent,\r\n    DatesFilterComponent,\r\n    SalesByItemReportComponent,\r\n    SalesByOrderReportComponent,\r\n    SummaryComponent,\r\n    EditsAfterPrintComponent,\r\n    CancelledOrdersReportComponent,\r\n    InvoicesPrintingComponent,\r\n    TopLeastItemsReportComponent,\r\n    XReportComponent,\r\n    BoxComponent,\r\n    RatingReportComponent,\r\n    RatingAddEditComponent,\r\n    ItemsListDialogComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    SlimLoadingBarModule.forRoot(),\r\n    AppRoutingModule,\r\n    PaginationModule.forRoot(),\r\n    DataTableModule,\r\n    DialogModule,\r\n    DropdownModule,\r\n    BrowserAnimationsModule,\r\n    ButtonModule,\r\n    CalendarModule,\r\n    NgPipesModule,\r\n    NgxChartsModule,\r\n    ChartModule\r\n  ],\r\n  providers: [\r\n    {provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptorService, multi: true},\r\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi: true},\r\n    ConfigService, \r\n    AuthService, \r\n    AuthGuardService, \r\n    UsersService, TablesService, ItemsService, OrdersService, SettingsService, ReportsService, HelperService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/change-password/change-password.component.css\n// module id = ./src/app/change-password/change-password.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n    <h1>\\r\\n        Change Password\\r\\n        <!-- <small>Version 2.0</small> -->\\r\\n\\r\\n\\r\\n\\r\\n    </h1>\\r\\n\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-primary\\\">\\r\\n\\r\\n                <div class=\\\"box-body\\\">\\r\\n\\r\\n\\r\\n\\r\\n                    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f.value)\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label col-sm-2\\\" for=\\\"old_password\\\">Old Password:</label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"old_password\\\" name=\\\"old_password\\\" ngModel #old_password_input=ngModel required>\\r\\n\\r\\n                                <div class=\\\"validation-error\\\" *ngIf=\\\"old_password_input.errors?.required\\\">\\r\\n                                    Should not be empty.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label col-sm-2\\\" for=\\\"old_password\\\">New Password:</label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"new_password\\\" name=\\\"new_password\\\" ngModel #new_password_input=ngModel required>\\r\\n\\r\\n                                <div class=\\\"validation-error\\\" *ngIf=\\\"new_password_input.errors?.required\\\">\\r\\n                                    Should not be empty.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label col-sm-2\\\" for=\\\"old_password\\\">Confirm Password:</label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"confirm_password\\\" name=\\\"confirm_password\\\" ngModel #confirm_password_input=ngModel required>\\r\\n\\r\\n                                <div class=\\\"validation-error\\\" *ngIf=\\\"confirm_password_input.errors?.required\\\">\\r\\n                                    Should not be empty.\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"validation-error\\\" *ngIf=\\\"new_password_input.value != confirm_password_input.value\\\">\\r\\n                                    New Password and Confirm Password does not match.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-sm-10 col-sm-offset-2\\\">\\r\\n                                <button type=\\\"submit\\\" [disabled]=\\\"!f.form.valid || new_password_input.value != confirm_password_input.value\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/change-password/change-password.component.html\n// module id = ./src/app/change-password/change-password.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\r\n  constructor(\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit(form_data)\r\n  {\r\n    this.authService.changePassword(form_data.old_password, form_data.new_password)\r\n      .subscribe( data => { alert(data['message']);} );\r\n  }\r\n\r\n  \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/change-password/change-password.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dates-filter/dates-filter.component.css\n// module id = ./src/app/dates-filter/dates-filter.component.css\n// module chunks = main","module.exports = \"<div class=\\\"box box-danger\\\">\\r\\n    <!-- <div class=\\\"box-header with-border\\\">\\r\\n        <i class=\\\"fa fa-filter\\\"></i>\\r\\n        <h3 class=\\\"box-title\\\">Filter</h3>\\r\\n        <input class=\\\"hidden_checkbox\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"show_actual\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n    </div> -->\\r\\n\\r\\n    <div class=\\\"box-body\\\">\\r\\n        <div *ngIf=\\\"hidden_checkbox_available\\\" class=\\\"text-right\\\">\\r\\n            <input style=\\\"position: absolute; top: -40px; right: 450px;\\\" class=\\\"hidden_checkbox\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"show_actual\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <label>From:</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                    <p-calendar [(ngModel)]=\\\"from\\\" showTime=\\\"true\\\" showIcon=\\\"true\\\" hourFormat=\\\"12\\\"></p-calendar>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <label>To:</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                    <p-calendar [(ngModel)]=\\\"to\\\" showTime=\\\"true\\\" showIcon=\\\"true\\\" hourFormat=\\\"12\\\"></p-calendar>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <p-button (onClick)=\\\"onClicked()\\\" label=\\\"Show\\\"></p-button>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dates-filter/dates-filter.component.html\n// module id = ./src/app/dates-filter/dates-filter.component.html\n// module chunks = main","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dates-filter',\r\n  templateUrl: './dates-filter.component.html',\r\n  styleUrls: ['./dates-filter.component.css']\r\n})\r\nexport class DatesFilterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  to:any;\r\n  from:any;\r\n  show_actual:any=false;\r\n\r\n  @Input()\r\n  hidden_checkbox_available=true;\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  @Output() onShowBtnClicked = new EventEmitter<any>();\r\n\r\n  onClicked()\r\n  {\r\n    if( this.to == null || this.from == null )\r\n    {\r\n      alert('Please specify From and To Dates');\r\n      return;\r\n    }\r\n\r\n    this.onShowBtnClicked.emit( { to: this.to, from:this.from, show_actual:this.show_actual } );\r\n  }\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dates-filter/dates-filter.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"<ng2-slim-loading-bar></ng2-slim-loading-bar>\\r\\n<div class=\\\"wrapper\\\">\\r\\n    <app-header></app-header>\\r\\n    <app-sidebar></app-sidebar>\\r\\n\\r\\n    <div class=\\\"content-wrapper\\\">\\r\\n        <router-outlet>\\r\\n\\r\\n        </router-outlet>\\r\\n    </div>\\r\\n    <app-footer></app-footer>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpHeaders, HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport 'rxjs/add/observable/throw'\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/retryWhen';\r\nimport 'rxjs/add/operator/retry';\r\nimport 'rxjs/add/operator/delay';\r\nimport 'rxjs/add/operator/take';\r\nimport 'rxjs/add/operator/scan';\r\nimport { ConfigService } from '../services/config.service';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private configService:ConfigService, private authService:AuthService, private router:Router)\r\n  {\r\n\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    \r\n    console.log(\"intercepted request ... \");\r\n\r\n    // Clone the request to add the new header.\r\n\r\n    let headers = { \"Access-Control-Allow-Origin\": this.configService.base_url, };\r\n\r\n    if(this.authService.isLoggedIn())\r\n    {\r\n      headers['Accept'] = 'application/json';\r\n      headers['Authorization'] = 'Bearer ' + localStorage.getItem('access_token');\r\n    }\r\n\r\n    const authReq = req.clone({ \r\n      setHeaders: headers\r\n    });\r\n    \r\n\r\n    console.log(\"Sending request with new header now ...\");\r\n    \r\n\r\n    //send the newly created request\r\n    return next.handle(authReq)\r\n            .retryWhen((errors) => {\r\n\r\n              let attempts = 0;\r\n\r\n                return errors\r\n                    .mergeMap(\r\n                      (error) => {\r\n                        if( error.status == 401 )\r\n                        {\r\n                          this.authService.logout();\r\n                          this.router.navigate(['login']);\r\n                          return Observable.throw(error);\r\n                        }\r\n                        else if( error.status == 422 )\r\n                        {\r\n                          \r\n                          let error_message = '';\r\n                          for(let key of Object.keys(error.error.errors))\r\n                          {\r\n                            //error.error.errors[key]\r\n                            for( let err_msg of error.error.errors[key] )\r\n                            {\r\n                              error_message += err_msg + '. '; \r\n                            }\r\n                          }\r\n                          alert(error_message);\r\n\r\n                          \r\n                          return Observable.throw(error);\r\n                        }\r\n                        // else if( error.status < 500 )\r\n                        // {\r\n                        //   alert(error.message);\r\n                        //   return Observable.throw(error);\r\n                        // }\r\n                        else\r\n                        {\r\n                          \r\n                          \r\n                          attempts++\r\n                          if(attempts < 5)\r\n                          {\r\n                            return Observable.of(error)\r\n                          }\r\n                          else\r\n                          {\r\n                            console.log(error);\r\n                            alert(error.message);\r\n                            return Observable.throw(error);\r\n                          }\r\n\r\n\r\n\r\n\r\n                        }\r\n                      } //(error.status === 429) ? Observable.throw(error) : Observable.of(error)\r\n                    )\r\n                    .delay(2000)\r\n                    \r\n            \r\n            })\r\n            \r\n            \r\n            \r\n              \r\n              \r\n\r\n\r\n\r\n            \r\n\r\n\r\n    // return next.handle(authReq)\r\n    //   .retry(10)\r\n    //   .do(\r\n    //     (event: HttpEvent<any>) => {\r\n    //       if (event instanceof HttpResponse) {\r\n    //         // do stuff with response if you want\r\n    //       }\r\n    //     }, (err: any) => {\r\n    //       if (err instanceof HttpErrorResponse) {\r\n    //         if (err.status === 401) {\r\n    //           // redirect to the login route\r\n    //           this.authService.logout();\r\n    //           this.router.navigate(['login']);\r\n    //           // or show a modal\r\n    //         }\r\n    //         else\r\n    //         {\r\n    //           alert(err.message);\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   );\r\n    \r\n  }\r\n\r\n  \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/interceptors/auth-interceptor.service.ts","import {Injectable} from '@angular/core';\r\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport 'rxjs/add/operator/do';\r\nimport {SlimLoadingBarService} from \"ng2-slim-loading-bar\";\r\n\r\n@Injectable()\r\nexport class LoaderInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private _loadingBar: SlimLoadingBarService) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // start our loader here\r\n    this._loadingBar.start();\r\n\r\n    return next.handle(req).do((event: HttpEvent<any>) => {\r\n      // if the event is for http response\r\n      if (event instanceof HttpResponse) {\r\n        // stop our loader here\r\n        this._loadingBar.complete();\r\n      }\r\n\r\n    }, (err: any) => {\r\n      // if any error (not for just HttpResponse) we stop our loader bar\r\n      this._loadingBar.complete();\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/interceptors/loader-interceptor.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/invoices-printing/invoices-printing.component.css\n// module id = ./src/app/invoices-printing/invoices-printing.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n    <h1>\\r\\n        Invoices Printing\\r\\n        <!-- <small>Version 2.0</small> -->\\r\\n\\r\\n    </h1>\\r\\n\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n\\r\\n            <div class=\\\"box box-primary\\\">\\r\\n                <div class=\\\"box-body\\\">\\r\\n\\r\\n                    <div class=\\\"form-horizontal\\\">\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"invoice_id_from\\\" class=\\\"col-sm-2 control-label\\\">Invoice ID From: </label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                                <input type=\\\"number\\\" [(ngModel)]=\\\"invoice_id_from\\\" name=\\\"invoice_id_from\\\" id=\\\"invoice_id_from\\\" min=\\\"0\\\" class=\\\"form-control\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"invoice_id_to\\\" class=\\\"col-sm-2 control-label\\\">Invoice ID To: </label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                                <input type=\\\"number\\\" [(ngModel)]=\\\"invoice_id_to\\\" name=\\\"invoice_id_to\\\" id=\\\"invoice_id_to\\\" min=\\\"0\\\" class=\\\"form-control\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"text-right\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"printBtnClicked()\\\"> <i class=\\\"fa fa-print\\\"></i> Print</button>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/invoices-printing/invoices-printing.component.html\n// module id = ./src/app/invoices-printing/invoices-printing.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ConfigService } from '../services/config.service';\r\n\r\n@Component({\r\n  selector: 'app-invoices-printing',\r\n  templateUrl: './invoices-printing.component.html',\r\n  styleUrls: ['./invoices-printing.component.css']\r\n})\r\nexport class InvoicesPrintingComponent implements OnInit {\r\n\r\n  invoice_id_from;\r\n  invoice_id_to;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private config: ConfigService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  printBtnClicked()\r\n  {\r\n\r\n    if(this.invoice_id_from == \"\" || this.invoice_id_to == \"\")\r\n    {\r\n      alert(\"Please profide 'Invoice ID From' and 'Invoice ID To'\");\r\n      return;\r\n    }\r\n\r\n    let r = confirm(\"Are you sure?\")\r\n\r\n    if (r != true) {\r\n      return;\r\n    }\r\n\r\n    let data = new FormData();\r\n    data.append('invoice_id_from', this.invoice_id_from);\r\n    data.append('invoice_id_to', this.invoice_id_to);\r\n\r\n    this.http.post(this.config.base_url + '/api/invoices-printing', data)\r\n      .subscribe( data =>{\r\n        alert(data['message']);\r\n      });\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/invoices-printing/invoices-printing.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/item/item.component.css\n// module id = ./src/app/item/item.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n    <h1>\\r\\n        Item\\r\\n        <!-- <small>Version 2.0</small> -->\\r\\n\\r\\n\\r\\n\\r\\n    </h1>\\r\\n\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-primary\\\">\\r\\n\\r\\n                <div class=\\\"box-body\\\">\\r\\n\\r\\n                    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f.value, form_type)\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\r\\n\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label col-sm-2\\\" for=\\\"category\\\">Category</label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"category\\\" name=\\\"category\\\" [(ngModel)]=\\\"item.category\\\" #category_input=ngModel required>\\r\\n                                <div class=\\\"validation-error\\\" *ngIf=\\\"category_input.errors?.required\\\">\\r\\n                                    Should not be empty.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label col-sm-2\\\" for=\\\"item_group\\\">Group</label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"item_group\\\" name=\\\"item_group\\\" [(ngModel)]=\\\"item.item_group\\\" #item_group_input=ngModel>\\r\\n                                <!-- <div class=\\\"validation-error\\\" *ngIf=\\\"item_group_input.errors?.required\\\">\\r\\n                                    Should not be empty.\\r\\n                                </div> -->\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label col-sm-2\\\" for=\\\"code\\\">Code</label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"code\\\" name=\\\"code\\\" [(ngModel)]=\\\"item.code\\\" #code_input=ngModel required>\\r\\n                                <div class=\\\"validation-error\\\" *ngIf=\\\"code_input.errors?.required\\\">\\r\\n                                    Should not be empty.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label col-sm-2\\\" for=\\\"name\\\">Name</label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"item.name\\\" #name_input=ngModel required>\\r\\n                                <div class=\\\"validation-error\\\" *ngIf=\\\"name_input.errors?.required\\\">\\r\\n                                    Should not be empty.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label col-sm-2\\\" for=\\\"unit\\\">Unit</label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"unit\\\" name=\\\"unit\\\" [(ngModel)]=\\\"item.unit\\\" #unit_input=ngModel required>\\r\\n                                <div class=\\\"validation-error\\\" *ngIf=\\\"unit_input.errors?.required\\\">\\r\\n                                    Should not be empty.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label col-sm-2\\\" for=\\\"price\\\">Price</label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"price\\\" name=\\\"price\\\" [(ngModel)]=\\\"item.price\\\" #price_input=ngModel required>\\r\\n                                <div class=\\\"validation-error\\\" *ngIf=\\\"price_input.errors?.required\\\">\\r\\n                                    Should not be empty.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\r\\n                                <div class=\\\"checkbox\\\">\\r\\n                                    <label><input type=\\\"checkbox\\\" name=\\\"is_activated\\\" [(ngModel)]=\\\"item.is_activated\\\"> Is Activated</label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-sm-10 col-sm-offset-2\\\">\\r\\n                                <button type=\\\"submit\\\" [disabled]=\\\"!f.form.valid || is_loading\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/item/item.component.html\n// module id = ./src/app/item/item.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ItemsService } from '../services/items.service';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-item',\r\n  templateUrl: './item.component.html',\r\n  styleUrls: ['./item.component.css']\r\n})\r\nexport class ItemComponent implements OnInit {\r\n\r\n  form_type=\"New\";\r\n  item:any = {\r\n    id: null,\r\n    category: '',\r\n    item_group: '',\r\n    name: '',\r\n    code: '',\r\n    unit: '',\r\n    price: '',\r\n    is_activated: false,\r\n  };\r\n\r\n  is_loading:boolean = false;\r\n\r\n  constructor(\r\n    private router: Router, \r\n    private route: ActivatedRoute, \r\n    private itemsService: ItemsService,\r\n    private authService: AuthService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(\r\n      (data)=>{\r\n        if( data.id != null )\r\n        {\r\n          this.form_type=\"Edit\";\r\n\r\n          this.is_loading = true;\r\n          this.itemsService.getItemById(data.id)\r\n            .subscribe(\r\n              (data)=>{\r\n                this.item = data;\r\n                this.is_loading = false;\r\n\r\n              }\r\n            );\r\n        }\r\n        \r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n  onSubmit(value, form_type)\r\n  {\r\n    this.is_loading = true;\r\n\r\n    let id = this.form_type == \"New\" ? null : this.item.id;\r\n\r\n    this.itemsService.saveData(value, id)\r\n        .finally(\r\n          ()=>{ this.is_loading = false; }\r\n        )\r\n        .subscribe(\r\n          (data)=>{\r\n            this.is_loading = false;\r\n\r\n            alert(data['message']);\r\n            if( data['success'] == true )\r\n            {\r\n              this.router.navigate(['/items']);\r\n            }\r\n          }\r\n        );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/item/item.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/items/items.component.css\n// module id = ./src/app/items/items.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n    <h1>\\r\\n        Items\\r\\n        <!-- <small>Version 2.0</small> -->\\r\\n\\r\\n        <a *ngIf=\\\"can_add_new\\\" class=\\\"btn btn-sm btn-primary\\\" routerLink=\\\"/item\\\" role=\\\"button\\\"><i class=\\\"fa fa-plus-circle\\\"></i> Add New</a>\\r\\n\\r\\n    </h1>\\r\\n\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-primary\\\">\\r\\n\\r\\n                <div class=\\\"box-body\\\">\\r\\n\\r\\n\\r\\n                    <table class=\\\"table table-bordered table-condensed table-hover\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>Category</th>\\r\\n                                <th>Group</th>\\r\\n                                <th>Code</th>\\r\\n                                <th>Name</th>\\r\\n                                <th>Unit</th>\\r\\n                                <th>Price</th>\\r\\n                                <th>Activated</th>\\r\\n                                <th>Action</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let item of items\\\">\\r\\n                                <td>{{item.category}}</td>\\r\\n                                <td>{{item.item_group}}</td>\\r\\n                                <td>{{item.code}}</td>\\r\\n                                <td>{{item.name}}</td>\\r\\n                                <td>{{item.unit}}</td>\\r\\n                                <td>{{item.price}}</td>\\r\\n                                <td>\\r\\n                                    <span class=\\\"label label-{{item.is_activated ? 'success' : 'danger'}}\\\">{{item.is_activated ? 'Yes' : 'No'}}</span>\\r\\n                                </td>\\r\\n\\r\\n                                <td>\\r\\n                                    <a *ngIf=\\\"can_edit\\\" class=\\\"btn btn-xs btn-primary\\\" routerLink=\\\"/item/{{item.id}}\\\" role=\\\"button\\\">\\r\\n                                        <i class=\\\"fa fa-edit\\\"></i> Edit\\r\\n                                    </a>\\r\\n                                </td>\\r\\n\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/items/items.component.html\n// module id = ./src/app/items/items.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { ItemsService } from '../services/items.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-items',\r\n  templateUrl: './items.component.html',\r\n  styleUrls: ['./items.component.css']\r\n})\r\nexport class ItemsComponent implements OnInit {\r\n\r\n  items;\r\n  can_add_new=false;\r\n  can_edit=false;\r\n\r\n  constructor(private authService: AuthService,\r\n    private itemsService: ItemsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.itemsService.getItems(1)\r\n      .subscribe( data => { this.items = data; } );\r\n\r\n    this.authService.hasPermission('add-new-item')\r\n      .subscribe( data => { this.can_add_new = data['has_permission']; } );\r\n\r\n    this.authService.hasPermission('edit-item')\r\n      .subscribe( data => { this.can_edit = data['has_permission']; } );\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/items/items.component.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'keys2',\r\n  pure: false,\r\n})\r\nexport class KeysPipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    return Object.keys(value)//.map(key => value[key]);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/keys.pipe.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"login-box\\\">\\r\\n    <div class=\\\"login-logo\\\">\\r\\n        <a href=\\\"#\\\"><b>Akonxo</b> RMS</a>\\r\\n    </div>\\r\\n    <!-- /.login-logo -->\\r\\n    <div class=\\\"login-box-body\\\">\\r\\n        <!-- <p class=\\\"login-box-msg\\\">Sign in to start your session</p> -->\\r\\n\\r\\n        <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f.value)\\\">\\r\\n            <div class=\\\"form-group has-feedback\\\">\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\" #username_input=\\\"ngModel\\\" placeholder=\\\"Email\\\" required email>\\r\\n                <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span>\\r\\n\\r\\n\\r\\n                <div class=\\\"validation-error\\\" *ngIf=\\\"username_input.errors?.email\\\">\\r\\n                    Email not valid.\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group has-feedback\\\">\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" #password_input=\\\"ngModel\\\" placeholder=\\\"Password\\\" required>\\r\\n                <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span>\\r\\n\\r\\n                <div class=\\\"validation-error\\\" *ngIf=\\\"password_input.errors?.required\\\">\\r\\n                    Password should not be empty.\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-xs-12\\\">\\r\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!f.form.valid || is_loading\\\" class=\\\"btn btn-primary btn-block btn-flat\\\">Sign In</button>\\r\\n                </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n\\r\\n        <br>\\r\\n        <div *ngIf=\\\"http_error_message != ''\\\" class=\\\"alert alert-danger\\\">\\r\\n            <strong>Login Failed, Error: </strong> {{http_error_message}}\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <!-- /.login-box-body -->\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { ConfigService } from '../services/config.service';\r\nimport 'rxjs/add/operator/finally';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  http_error_message = \"\";\r\n  is_loading = false;\r\n\r\n  username:string = \"\";\r\n  password:string = \"\";\r\n\r\n  constructor(private http: HttpClient, \r\n              private config: ConfigService, \r\n              private authService: AuthService,\r\n              private router: Router\r\n            ) \r\n  { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit(form_data)\r\n  {\r\n    this.http_error_message = \"\";\r\n    this.is_loading = true;\r\n\r\n    this.authService.login(form_data.username, form_data.password)\r\n      .finally( ()=>{ this.is_loading = false; } )\r\n      .subscribe(\r\n        (data)=>{\r\n          if(data['access_token'] != '')\r\n          {\r\n            localStorage.setItem(\"access_token\", data['access_token']);\r\n            this.router.navigate(['table-and-orders']);\r\n          }\r\n        },\r\n        (err)=>{\r\n          this.http_error_message = err.message;\r\n\r\n          console.log(err);\r\n          if (err.error instanceof Error) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            this.http_error_message = 'An error occurred:', err.error.message;\r\n          } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            this.http_error_message = `Backend returned code ${err.status}, body was: ${err.error.message}`;\r\n          }\r\n\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/open-order/open-order.component.css\n// module id = ./src/app/open-order/open-order.component.css\n// module chunks = main","module.exports = \"<div class=\\\"open-order\\\">\\r\\n    <span class=\\\"label label-success\\\">{{order.order_type}}</span>\\r\\n\\r\\n    <p *ngIf=\\\"order.portion != null\\\">Portion/Floor: <b>{{order.portion}}</b></p>\\r\\n    <p *ngIf=\\\"order.table_name != null\\\">Table: <b>{{order.table_name}}</b></p>\\r\\n    <p *ngIf=\\\"order.cover != null\\\">Cover: <b>{{order.cover | number:'1.0-0' }}</b></p>\\r\\n    <p *ngIf=\\\"order.deliver_to_name != null\\\">Customer: <b>{{order.deliver_to_name}}</b></p>\\r\\n    <p *ngIf=\\\"order.deliver_to_phone != null\\\">Phone: <b>{{order.deliver_to_phone}}</b></p>\\r\\n    <p *ngIf=\\\"order.deliver_to_address != null\\\">Address: <b>{{order.deliver_to_address}}</b></p>\\r\\n\\r\\n    <hr style=\\\"margin:2px\\\">\\r\\n\\r\\n    <p>Status:\\r\\n        <span class=\\\"label {{ order.order_status_slug == 'pending' ? 'label-danger' : 'label-success' }}\\\">\\r\\n            {{order.order_status}}\\r\\n        </span>\\r\\n    </p>\\r\\n    <a (click)=\\\"showChangeStatusModal()\\\" class=\\\"btn btn-primary btn-xs btn-block\\\" role=\\\"button\\\">Change Status</a>\\r\\n\\r\\n\\r\\n\\r\\n    <p *ngIf=\\\"order.order_status_slug == 'pending'\\\">Time:\\r\\n        <b class=\\\"{{order.elapsed_minutes >= 20 ? 'text-red' : ''}}\\\">{{order.elapsed_minutes}} minute(s)</b>\\r\\n    </p>\\r\\n\\r\\n    <hr style=\\\"margin:2px\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <a class=\\\"btn btn-primary btn-xs btn-block\\\" routerLink=\\\"/edit-order/{{order.id}}\\\" role=\\\"button\\\">Edit Order</a>\\r\\n    <a (click)=\\\"reprintForKitchens(order.id)\\\" class=\\\"btn btn-warning btn-xs btn-block\\\" role=\\\"button\\\">Re-print for Kitchens</a>\\r\\n\\r\\n    <a (click)=\\\"showDiscountModal()\\\" class=\\\"btn btn-danger btn-xs btn-block\\\" role=\\\"button\\\">Discount</a>\\r\\n\\r\\n    <a (click)=\\\"printForCustomer(order.id)\\\" class=\\\"btn btn-primary btn-xs btn-block\\\" role=\\\"button\\\">Print for Customer</a>\\r\\n    <a (click)=\\\"showCloseOrderModal()\\\" class=\\\"btn btn-primary btn-xs btn-block\\\" role=\\\"button\\\">Close Order</a>\\r\\n\\r\\n    <p-dialog width=\\\"350\\\" (onShow)=\\\"onModalShow($event)\\\" (onHide)=\\\"onModalHide($event)\\\" header=\\\"Discount\\\" [modal]=\\\"true\\\" [(visible)]=\\\"is_discount_modal_visible\\\">\\r\\n\\r\\n\\r\\n        <table class=\\\"table table-hover table-condensed table-bordered\\\">\\r\\n            <tbody>\\r\\n\\r\\n                <tr>\\r\\n                    <td>Order Amount</td>\\r\\n                    <td class=\\\"text-right\\\">{{order.order_amount_before_discount | currency:' ' }}</td>\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                    <td>Discount (%)</td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        <input (blur)=\\\"discountPercentBlur($event)\\\" style=\\\"text-align: right;\\\" min=\\\"0\\\" [value]=\\\"order.discount / order.order_amount_before_discount * 100 | number:'1.2-2'\\\" type=\\\"number\\\" name=\\\"discount_percent\\\" id=\\\"discount_percent\\\" class=\\\"form-control\\\">\\r\\n                    </td>\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                    <td>Discount Amount</td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        <input (blur)=\\\"discountAmountBlur($event)\\\" style=\\\"text-align: right;\\\" min=\\\"0\\\" [value]=\\\"order.discount\\\" type=\\\"number\\\" name=\\\"discount_amount\\\" id=\\\"discount_amount\\\" class=\\\"form-control\\\">\\r\\n                    </td>\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                    <td>Amount Exc. ST</td>\\r\\n                    <td class=\\\"text-right\\\">{{order.order_amount_ex_st | currency:' ' }}</td>\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                    <td>Sales Tax</td>\\r\\n                    <td class=\\\"text-right\\\">{{order.sales_tax | currency:' ' }}</td>\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                    <td>Amount Inc. ST</td>\\r\\n                    <td class=\\\"text-right\\\">{{order.order_amount_inc_st | currency:' ' }}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n\\r\\n        <div *ngIf=\\\"order.is_printed_for_customer\\\" class=\\\"box box-danger\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n                <h3 class=\\\"box-title\\\">\\r\\n                    Authentication for Discount After Print\\r\\n                </h3>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"box-body\\\">\\r\\n\\r\\n                <table class=\\\"table table-bordered table-condensed table-hover\\\">\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>User ID</td>\\r\\n                            <td>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"other_info.user_id\\\" name=\\\"user_id\\\" class=\\\"form-control\\\">\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>Password</td>\\r\\n                            <td>\\r\\n                                <input type=\\\"password\\\" [(ngModel)]=\\\"other_info.password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>Remarks</td>\\r\\n                            <td>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"other_info.remarks\\\" name=\\\"remarks\\\" class=\\\"form-control\\\">\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <button (click)=\\\"saveDiscount()\\\" type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\">Save</button>\\r\\n\\r\\n    </p-dialog>\\r\\n\\r\\n    <p-dialog width=\\\"350\\\" (onShow)=\\\"onModalShow($event)\\\" (onHide)=\\\"onModalHide($event)\\\" header=\\\"Change Order Status\\\" [modal]=\\\"true\\\" [(visible)]=\\\"is_change_status_modal_visible\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"status\\\" class=\\\" control-label\\\">Status:</label>\\r\\n            <div class=\\\"\\\">\\r\\n                <select #status_input name=\\\"abc\\\" id=\\\"status\\\" class=\\\"form-control\\\" required=\\\"required\\\">\\r\\n                    <option value=\\\"1\\\">Pending</option>\\r\\n                    <option value=\\\"2\\\">Served</option>\\r\\n                    <option value=\\\"4\\\">Cancel Bill</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div [hidden]=\\\"status_input.value != 4\\\">\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"user_id\\\" class=\\\" control-label\\\">User ID:</label>\\r\\n                <div class=\\\"\\\">\\r\\n                    <input #user_id_input type=\\\"text\\\" name=\\\"user_id\\\" id=\\\"user_id\\\" class=\\\"form-control\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"password\\\" class=\\\" control-label\\\">Password:</label>\\r\\n                <div class=\\\"\\\">\\r\\n                    <input #password_input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"remarks\\\" class=\\\" control-label\\\">Remarks:</label>\\r\\n                <div class=\\\"\\\">\\r\\n                    <input #remarks_input type=\\\"text\\\" name=\\\"remarks\\\" id=\\\"remarks\\\" class=\\\"form-control\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <button (click)=\\\"changeStatus(order.id, status_input.value, user_id_input.value, password_input.value, remarks_input.value)\\\" type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\">Change Status</button>\\r\\n\\r\\n\\r\\n\\r\\n    </p-dialog>\\r\\n\\r\\n    <p-dialog width=\\\"350\\\" (onShow)=\\\"onModalShow($event)\\\" (onHide)=\\\"onModalHide($event)\\\" header=\\\"Close Order\\\" [modal]=\\\"true\\\" [(visible)]=\\\"is_close_order_modal_visible\\\">\\r\\n\\r\\n        <h3><small>Order Amount: </small> {{order.order_amount_inc_st | currency:'Rs.' }}</h3>\\r\\n        <br>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"received_through\\\" class=\\\"control-label\\\">Received Through:</label>\\r\\n            <div class=\\\"\\\">\\r\\n                <select style=\\\"font-size: 40px; height: 60px; color:crimson;\\\" #received_through_input name=\\\"received_through\\\" id=\\\"received_through\\\" class=\\\"form-control\\\" required=\\\"required\\\">\\r\\n                    <option value=\\\"0\\\">-</option>\\r\\n                    <option value=\\\"Cash\\\">Cash</option>\\r\\n                    <option value=\\\"Card\\\">Card</option>\\r\\n                    <option value=\\\"Ent\\\">Ent</option>\\r\\n                    <option value=\\\"Cash2\\\"></option>\\r\\n                </select>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"received_through_input.value == 0\\\">\\r\\n                Should not be empty.\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div *ngIf=\\\"received_through_input.value == 'Ent'\\\" class=\\\"form-group\\\">\\r\\n            <label for=\\\"ent_remarks\\\" class=\\\"control-label\\\">Ent Remarks:</label>\\r\\n            <div class=\\\"\\\">\\r\\n                <input [(ngModel)]=\\\"ent_remarks\\\" type=\\\"text\\\" name=\\\"ent_remarks\\\" id=\\\"ent_remarks\\\" class=\\\"form-control\\\" required=\\\"required\\\">\\r\\n            </div>\\r\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"ent_remarks == ''\\\">\\r\\n                Should not be empty.\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div *ngIf=\\\"received_through_input.value != 'Ent'\\\" class=\\\"form-group\\\">\\r\\n            <label for=\\\"received_amount\\\" class=\\\"control-label\\\">Received Amount:</label>\\r\\n            <div class=\\\"\\\">\\r\\n                <input [(ngModel)]=\\\"received_amount\\\" type=\\\"number\\\" name=\\\"received_amount\\\" id=\\\"received_amount\\\" class=\\\"form-control\\\" value=\\\"\\\" required=\\\"required\\\" pattern=\\\"\\\" title=\\\"\\\">\\r\\n            </div>\\r\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"received_amount < order.order_amount_inc_st\\\">\\r\\n                Received Amount is less than Order Amount.\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <h3 *ngIf=\\\"received_through_input.value != 'Ent'\\\"><small>Balance: </small> {{ received_amount - order.order_amount_inc_st | currency:'Rs.' }}</h3>\\r\\n\\r\\n        <br><br>\\r\\n        <button [disabled]=\\\" is_loading || received_through_input.value == 0 || (received_through_input.value != 'Ent' && received_amount < order.order_amount_inc_st) || (received_through_input.value == 'Ent' && (ent_remarks == '') )\\\" (click)=\\\"closeOrder(order.id, received_through_input.value, ent_remarks)\\\"\\r\\n            type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\">Close Order</button>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    </p-dialog>\\r\\n\\r\\n\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/open-order/open-order.component.html\n// module id = ./src/app/open-order/open-order.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { OrdersService } from '../services/orders.service';\r\n\r\n@Component({\r\n  selector: 'app-open-order',\r\n  templateUrl: './open-order.component.html',\r\n  styleUrls: ['./open-order.component.css']\r\n})\r\nexport class OpenOrderComponent implements OnInit {\r\n\r\n  @Input() order:any;\r\n\r\n  is_change_status_modal_visible=false;\r\n  is_close_order_modal_visible=false;\r\n  is_discount_modal_visible=false;\r\n  received_amount=0;\r\n  ent_remarks='';\r\n\r\n  is_loading=false;\r\n\r\n  other_info:any = {\r\n    'user_id': '',\r\n    'password': '',\r\n    'remarks': ''\r\n  };\r\n\r\n  @Output() modalOpen = new EventEmitter();\r\n  @Output() modalClose = new EventEmitter();\r\n\r\n  constructor(\r\n    private ordersService: OrdersService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  showChangeStatusModal()\r\n  {\r\n    this.is_change_status_modal_visible=true;\r\n  }\r\n\r\n  showCloseOrderModal()\r\n  {\r\n    this.is_close_order_modal_visible=true;\r\n  }\r\n\r\n  showDiscountModal()\r\n  {\r\n    this.is_discount_modal_visible=true;\r\n  }\r\n\r\n  onModalShow(event)\r\n  {\r\n    this.modalOpen.emit();\r\n  }\r\n\r\n  changeStatus(order_id, status, user_id, password, remarks)\r\n  {\r\n    let r = confirm(\"Are you sure?\")\r\n\r\n    if( r != true )\r\n    {\r\n      return; \r\n    }\r\n\r\n    this.ordersService.changeOrderStatus(order_id, status, user_id, password, remarks)\r\n      .subscribe( data => {\r\n          \r\n          if(data['success'] == true)\r\n          {\r\n            this.is_change_status_modal_visible = false;\r\n          }\r\n          else\r\n          {\r\n            alert(data['message']); \r\n          }\r\n        });\r\n  }\r\n\r\n  onModalHide(event)\r\n  {\r\n    this.modalClose.emit();\r\n  }\r\n\r\n  closeOrder(order_id, received_through, ent_remarks)\r\n  {\r\n    let r = confirm('Are you Sure?');\r\n\r\n    if( r != true )\r\n      return;\r\n\r\n      this.is_loading = true;\r\n\r\n    this.ordersService.closeOrder(order_id, received_through, ent_remarks)\r\n      .subscribe(data => {\r\n        \r\n        if(data['success'] == true)\r\n        {\r\n          this.is_close_order_modal_visible = false;\r\n        }\r\n        else\r\n        {\r\n          alert(data['message']);\r\n        }\r\n\r\n        this.is_loading = false;\r\n      });\r\n  }\r\n\r\n  printForCustomer(order_id)\r\n  {\r\n    this.ordersService.printForCustomer(order_id)\r\n      .subscribe(data => {\r\n        if(data['success'] == false)\r\n        {\r\n          alert(data['message']);\r\n        }\r\n      });\r\n  }\r\n\r\n  reprintForKitchens(order_id)\r\n  {\r\n    let r = confirm(\"Are you sure to reprint order for kitchens?\")\r\n\r\n    if(  r != true)\r\n    {\r\n      return;\r\n    }\r\n\r\n    this.ordersService.reprintForKitchens(order_id)\r\n      .subscribe();\r\n\r\n    \r\n  }\r\n\r\n  discountPercentBlur(event:any)\r\n  {\r\n    let discount_percent = event.target.value;\r\n    this.order.discount = this.order.order_amount_before_discount * discount_percent / 100;\r\n    this.calculateOrderAmounts();\r\n  }\r\n\r\n  discountAmountBlur(event:any)\r\n  {\r\n    this.order.discount = event.target.value;\r\n    this.calculateOrderAmounts();\r\n  }\r\n\r\n  calculateOrderAmounts()\r\n  {\r\n    let sales_tax_rate = this.order.sales_tax / this.order.order_amount_ex_st * 100;\r\n\r\n    this.order.order_amount_ex_st = this.order.order_amount_before_discount - this.order.discount;\r\n    this.order.sales_tax = this.order.order_amount_ex_st * sales_tax_rate / 100;\r\n    this.order.order_amount_inc_st = this.order.order_amount_ex_st + this.order.sales_tax;\r\n  }\r\n\r\n  saveDiscount()\r\n  {\r\n    if ( this.order.order_amount_before_discount*1 < this.order.discount*1 )\r\n    {\r\n      alert('Discount is greater than Order Amount');\r\n      return;\r\n    }\r\n\r\n    this.ordersService.saveDiscount(this.order, this.other_info)\r\n      .subscribe(data => \r\n        { \r\n          alert(data['message']);\r\n          if( data['success'] == true )\r\n          {\r\n            this.is_discount_modal_visible = false;\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/open-order/open-order.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/order/order.component.css\n// module id = ./src/app/order/order.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n    <h1>\\r\\n        Order\\r\\n        <!-- <small>Version 2.0</small> -->\\r\\n\\r\\n    </h1>\\r\\n\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-primary\\\">\\r\\n\\r\\n                <div style=\\\"background-color:#ecf0f5;\\\" class=\\\"box-body\\\">\\r\\n\\r\\n                    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f.value, form_type)\\\" (keydown.enter)=\\\"$event.preventDefault()\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-6\\\">\\r\\n                                <div class=\\\"box box-success\\\">\\r\\n                                    <div class=\\\"box-header with-border\\\">\\r\\n                                        <h3 class=\\\"box-title\\\">Order Information</h3>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"box-body\\\">\\r\\n\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"order_type\\\" class=\\\"col-sm-2 control-label\\\">Order Type:</label>\\r\\n                                            <div class=\\\"col-sm-10\\\">\\r\\n                                                <select name=\\\"order_type\\\" id=\\\"order_type\\\" class=\\\"form-control input-md\\\" [(ngModel)]=\\\"order.order_type\\\" required=\\\"required\\\" #order_type_input=ngModel>\\r\\n                                                        <option *ngFor=\\\"let order_type of order_types\\\" [value]=\\\"order_type.id\\\">{{order_type.name}}</option>\\r\\n                                                    </select>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                        <ng-template let-table_required [ngTemplateOutletContext]=\\\"{ $implicit: order_type_input.value == '1' }\\\" [ngTemplateOutlet]=\\\"table\\\" #table>\\r\\n                                            <div *ngIf=\\\"table_required\\\" class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"table\\\" class=\\\"col-sm-2 control-label\\\">Table:</label>\\r\\n                                                <div class=\\\"col-sm-10\\\">\\r\\n                                                    <select name=\\\"table\\\" id=\\\"table\\\" class=\\\"form-control input-md\\\" [(ngModel)]=\\\"order.table\\\" #table_input=ngModel [required]=\\\"table_required\\\">\\r\\n                                                            <option *ngIf=\\\"order.id != null && order.table != null\\\" [value]=\\\"order.table\\\">{{order.table_portion + ' | ' + order.table_name}}</option>\\r\\n                                                            <option *ngFor=\\\"let free_table of free_tables\\\" [value]=\\\"free_table.id\\\">{{ free_table.portion + ' | ' + free_table.name }}</option>\\r\\n                                                        </select>\\r\\n                                                    <div class=\\\"validation-error\\\" *ngIf=\\\"table_input.errors?.required\\\">\\r\\n                                                        Should not be empty.\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </ng-template>\\r\\n\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"cover\\\" class=\\\"col-sm-2 control-label\\\">Cover:</label>\\r\\n                                            <div class=\\\"col-sm-10\\\">\\r\\n                                                <input type=\\\"number\\\" min=\\\"0\\\" name=\\\"cover\\\" id=\\\"cover\\\" class=\\\"form-control input-md\\\" [(ngModel)]=\\\"order.cover\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <ng-template let-cust_info_required [ngTemplateOutletContext]=\\\"{ $implicit: order_type_input.value == '2' || order_type_input.value == '3' }\\\" [ngTemplateOutlet]=\\\"customer\\\" #customer>\\r\\n                                <div *ngIf=\\\"cust_info_required\\\" class=\\\"col-sm-6\\\">\\r\\n                                    <div class=\\\"box box-danger\\\">\\r\\n                                        <div class=\\\"box-header with-border\\\">\\r\\n                                            <h3 class=\\\"box-title\\\">Customer Information</h3>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div class=\\\"box-body\\\">\\r\\n\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label col-sm-2\\\" for=\\\"deliver_to_name\\\">Name</label>\\r\\n                                                <div class=\\\"col-sm-10\\\">\\r\\n                                                    <input type=\\\"text\\\" class=\\\"form-control input-md\\\" id=\\\"deliver_to_name\\\" name=\\\"deliver_to_name\\\" [(ngModel)]=\\\"order.deliver_to_name\\\" #deliver_to_name_input=ngModel [required]=\\\"cust_info_required\\\">\\r\\n                                                    <div class=\\\"validation-error\\\" *ngIf=\\\"deliver_to_name_input.errors?.required\\\">\\r\\n                                                        Should not be empty.\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n\\r\\n                                            <ng-template let-delivery_info_required [ngTemplateOutletContext]=\\\"{ $implicit: order_type_input.value == '3' }\\\" [ngTemplateOutlet]=\\\"delivery\\\" #delivery>\\r\\n\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n                                                    <label class=\\\"control-label col-sm-2\\\" for=\\\"deliver_to_phone\\\">Phone</label>\\r\\n                                                    <div class=\\\"col-sm-10\\\">\\r\\n                                                        <input type=\\\"text\\\" class=\\\"form-control input-md\\\" id=\\\"deliver_to_phone\\\" name=\\\"deliver_to_phone\\\" [(ngModel)]=\\\"order.deliver_to_phone\\\" #deliver_to_phone_input=ngModel [required]=\\\"delivery_info_required\\\">\\r\\n                                                        <div class=\\\"validation-error\\\" *ngIf=\\\"deliver_to_phone_input.errors?.required\\\">\\r\\n                                                            Should not be empty.\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n                                                    <label class=\\\"control-label col-sm-2\\\" for=\\\"deliver_to_address\\\">Address</label>\\r\\n                                                    <div class=\\\"col-sm-10\\\">\\r\\n                                                        <input type=\\\"text\\\" class=\\\"form-control input-md\\\" id=\\\"deliver_to_address\\\" name=\\\"deliver_to_address\\\" [(ngModel)]=\\\"order.deliver_to_address\\\" #deliver_to_address_input=ngModel [required]=\\\"delivery_info_required\\\">\\r\\n                                                        <div class=\\\"validation-error\\\" *ngIf=\\\"deliver_to_address_input.errors?.required\\\">\\r\\n                                                            Should not be empty.\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n\\r\\n                                            </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n\\r\\n                                <div class=\\\"box box-warning\\\">\\r\\n\\r\\n                                    <div class=\\\"box-header with-border\\\">\\r\\n                                        <h3 class=\\\"box-title\\\">Items</h3>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"box-body\\\">\\r\\n\\r\\n\\r\\n\\r\\n                                        <table class=\\\"table table-bordered table-condensed table-hover\\\">\\r\\n                                            <thead>\\r\\n                                                <tr>\\r\\n                                                    <th>Item</th>\\r\\n                                                    <th>Qty / Rate / Amount</th>\\r\\n\\r\\n                                                    <!--\\r\\n                                                                <th style=\\\"width:100px;\\\">Rate</th>\\r\\n                                                                <th style=\\\"width:100px;\\\">Amount</th>\\r\\n                                                                -->\\r\\n\\r\\n                                                    <th>Add / Remove</th>\\r\\n                                                </tr>\\r\\n                                            </thead>\\r\\n                                            <tbody>\\r\\n                                                <tr *ngFor=\\\"let order_detail of order.order_details; let i = index;\\\">\\r\\n                                                    <td>\\r\\n                                                        {{ order_detail.item_name }}\\r\\n                                                        <div *ngIf=\\\"order_detail.item_notes != null && order_detail.item_notes != '' \\\">\\r\\n                                                            <p class=\\\"text-danger\\\">\\r\\n                                                                <b>Notes:</b> {{ order_detail.item_notes }}\\r\\n                                                            </p>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        {{ order_detail.qty }}\\r\\n                                                        <br>{{ order_detail.rate }}\\r\\n                                                        <br>{{ order_detail.qty * order_detail.rate }}\\r\\n                                                    </td>\\r\\n                                                    <td>\\r\\n                                                        <button (click)=\\\"removeItem(i)\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\"><i class=\\\"fa fa-times-circle\\\"></i></button>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n\\r\\n                                            <tfoot>\\r\\n                                                <tr>\\r\\n                                                    <td colspan=\\\"3\\\">\\r\\n                                                        <!-- <select id=\\\"new_item_select\\\" (change)=\\\"newItemChanged($event)\\\" [(ngModel)]=\\\"new_item.id\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control input-md\\\">\\r\\n                                                                        <option *ngFor=\\\"let item of items\\\" [value]=\\\"item.id\\\">{{item.code + \\\" | \\\" + item.name + \\\" (\\\"+item.unit+\\\")\\\" }}</option>\\r\\n                                                                    </select> -->\\r\\n\\r\\n                                                        <p-dropdown (onChange)=\\\"newItemChanged($event)\\\" [style]=\\\"{'width':'100%'}\\\" id=\\\"new_item_select\\\" [options]=\\\"items\\\" optionLabel=\\\"name\\\" [(ngModel)]=\\\"new_item\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [filter]=\\\"true\\\">\\r\\n\\r\\n                                                        </p-dropdown>\\r\\n\\r\\n\\r\\n\\r\\n                                                        <div style=\\\"width:100%;\\\" class=\\\"input-group\\\">\\r\\n                                                            <span class=\\\"input-group-btn\\\">\\r\\n                                                                            <button (click)=\\\"decreaseNewQty()\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\"> <i class=\\\"fa fa-minus-circle\\\"></i> </button>\\r\\n                                                                        </span>\\r\\n                                                            <input class=\\\"text-center\\\" type=\\\"number\\\" min=0 [(ngModel)]=\\\"new_item.qty\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control input-md\\\">\\r\\n                                                            <span class=\\\"input-group-btn\\\">\\r\\n                                                                            <button (click)=\\\"increaseNewQty()\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\"> <i class=\\\"fa fa-plus-circle\\\"></i> </button>\\r\\n                                                                        </span>\\r\\n                                                        </div>\\r\\n\\r\\n\\r\\n                                                        <div style=\\\"width:100%;\\\" class=\\\"input-group\\\">\\r\\n                                                            <span class=\\\"input-group-addon\\\">\\r\\n                                                                Notes\\r\\n                                                            </span>\\r\\n                                                            <input type=\\\"text\\\" [(ngModel)]=\\\"new_item.item_notes\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control input-md\\\">\\r\\n                                                        </div>\\r\\n\\r\\n\\r\\n                                                        <div style=\\\"width:100%;\\\" class=\\\"input-group\\\">\\r\\n                                                            <span class=\\\"input-group-addon\\\">\\r\\n                                                                Price\\r\\n                                                            </span>\\r\\n                                                            <input type=\\\"number\\\" [(ngModel)]=\\\"new_item.rate\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control input-md\\\" readonly>\\r\\n                                                        </div>\\r\\n\\r\\n                                                        <div style=\\\"width: 100%;\\\" class=\\\"input-group\\\">\\r\\n                                                            <span class=\\\"input-group-addon\\\">\\r\\n                                                                Total\\r\\n                                                            </span>\\r\\n                                                            <input type=\\\"number\\\" [value]=\\\"new_item.qty * new_item.rate\\\" class=\\\"form-control input-md\\\" readonly>\\r\\n                                                        </div>\\r\\n\\r\\n\\r\\n                                                        <div class=\\\"text-right\\\">\\r\\n                                                            <button type=\\\"button\\\" (click)=\\\"resetNewItem()\\\" class=\\\"btn btn-danger\\\"> <i class=\\\"fa fa-times\\\"></i> </button>\\r\\n                                                            <button type=\\\"button\\\" (click)=\\\"addNewItem()\\\" class=\\\"btn btn-success\\\"><i class=\\\"fa fa-plus-circle\\\"></i></button>\\r\\n                                                        </div>\\r\\n\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </tfoot>\\r\\n                                        </table>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"text-right\\\">\\r\\n                            <h3>\\r\\n                                <small>Total Amount:</small> {{ order.order_amount_ex_st | currency:'Rs.' }}\\r\\n                            </h3>\\r\\n\\r\\n                            <h3>\\r\\n                                <small>Sales Tax:</small> {{ order.sales_tax | currency:'Rs.' }}\\r\\n                            </h3>\\r\\n\\r\\n                            <h3>\\r\\n                                <small>Total Amount Including Sales Tax:</small> {{ order.order_amount_inc_st | currency:'Rs.' }}\\r\\n                            </h3>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                        <div *ngIf=\\\"order.is_printed_for_customer == 1\\\" class=\\\"box box-danger\\\">\\r\\n                            <div class=\\\"box-header with-border\\\">\\r\\n                                <h3 class=\\\"box-title\\\">\\r\\n                                    <i class=\\\"fa fa-key\\\"></i> Authentication for Editing After Printing For Customer\\r\\n                                </h3>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"box-body\\\">\\r\\n\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"user_id\\\" class=\\\"col-sm-2 control-label\\\">User ID</label>\\r\\n                                    <div class=\\\"col-sm-10\\\">\\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"other_info.user_id\\\" name=\\\"user_id\\\" id=\\\"user_id\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"password\\\" class=\\\"col-sm-2 control-label\\\">Password</label>\\r\\n                                    <div class=\\\"col-sm-10\\\">\\r\\n                                        <input type=\\\"password\\\" [(ngModel)]=\\\"other_info.password\\\" name=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"remarks\\\" class=\\\"col-sm-2 control-label\\\">Remarks</label>\\r\\n                                    <div class=\\\"col-sm-10\\\">\\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"other_info.remarks\\\" name=\\\"remarks\\\" id=\\\"remarks\\\" class=\\\"form-control\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-sm-12 text-right\\\">\\r\\n                                <button type=\\\"submit\\\" [disabled]=\\\"!f.form.valid || is_loading || new_item.id != 0 || order.order_details.length == 0\\\" class=\\\"btn btn-primary\\\"> <i class=\\\"fa fa-save\\\"></i> Save</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"new_item.id != 0 \\\" class=\\\"text-danger text-right\\\">\\r\\n                            Please Add or Clear Last Item to enable save button\\r\\n                        </div>\\r\\n\\r\\n                        <div *ngIf=\\\"order.order_details.length == 0\\\" class=\\\"text-danger text-right\\\">\\r\\n                            Please Add Items\\r\\n                        </div>\\r\\n\\r\\n                    </form>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/order/order.component.html\n// module id = ./src/app/order/order.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { OrdersService } from '../services/orders.service';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { TablesService } from '../services/tables.service';\r\nimport { ItemsService } from '../services/items.service';\r\nimport { SettingsService } from '../services/settings.service';\r\n\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.css']\r\n})\r\nexport class OrderComponent implements OnInit {\r\n\r\n  form_type = \"New\";\r\n  order: any = {\r\n    id: null,\r\n    order_type: 1,\r\n    order_details: Array(),\r\n  };\r\n  deleted_details:any = Array();\r\n  order_types:any = Array();\r\n  free_tables:any = Array();\r\n\r\n  other_info:any = {\r\n    'user_id': '',\r\n    'password': '',\r\n    'remarks': ''\r\n  };\r\n\r\n  sales_tax_rate:any;\r\n\r\n  new_item = {\r\n    id:0,\r\n    qty:1,\r\n    rate:0,\r\n    item_notes: '',\r\n  };\r\n\r\n  is_loading: boolean = false;\r\n\r\n  total_order_amount_interval:any;\r\n\r\n  items:any = Array();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ordersService: OrdersService,\r\n    private tablesService: TablesService,\r\n    private authService: AuthService,\r\n    private itemsService: ItemsService,\r\n    private settingsService: SettingsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.route.params.subscribe(\r\n      (data) => {\r\n        if (data.id != null) {\r\n          this.form_type = \"Edit\";\r\n\r\n          this.is_loading = true;\r\n          this.ordersService.getOrderById(data.id)\r\n            .subscribe(\r\n              (data) => {\r\n                this.order = data;\r\n                this.is_loading = false;\r\n\r\n              }\r\n            );\r\n        }\r\n\r\n      }\r\n    );\r\n\r\n    this.is_loading = true;\r\n    this.ordersService.getOrderTypes()\r\n      .subscribe( data => { this.order_types = data; this.is_loading = false; } );\r\n\r\n    this.is_loading = true;\r\n    this.tablesService.getFreeTables()\r\n      .subscribe(data => { this.free_tables = data; this.is_loading = false; });\r\n\r\n    this.is_loading = true;\r\n    this.itemsService.getItems()\r\n      .subscribe(data => {\r\n        this.items = data; \r\n        this.items.splice(0,0,this.new_item);\r\n        this.is_loading = false;\r\n      });\r\n\r\n    this.is_loading = true;\r\n    this.settingsService.getSettingBySlug('sales_tax_rate')\r\n      .subscribe(data => {\r\n        this.is_loading = false;\r\n        this.sales_tax_rate = data['value'];\r\n      });\r\n\r\n    this.total_order_amount_interval = setInterval(()=>{\r\n      this.order.order_amount_ex_st = 0;\r\n      this.order.order_details.forEach(element => {\r\n        this.order.order_amount_ex_st += element.qty * element.rate;\r\n      });\r\n\r\n      this.order.sales_tax_rate = this.sales_tax_rate;\r\n      this.order.sales_tax = this.order.order_amount_ex_st * this.sales_tax_rate / 100;\r\n      this.order.order_amount_inc_st = this.order.order_amount_ex_st + this.order.sales_tax;\r\n\r\n    }, 50);\r\n  }\r\n\r\n  ngOnDestroy()\r\n  {\r\n    if( this.total_order_amount_interval )\r\n    {\r\n      clearInterval(this.total_order_amount_interval);\r\n    }\r\n  }\r\n\r\n  onSubmit(value, form_type) {\r\n    this.is_loading = true;\r\n\r\n    let id = this.form_type == \"New\" ? null : this.order.id;\r\n\r\n    this.ordersService.saveOrder(this.order, this.deleted_details, id, this.other_info)\r\n      .finally(\r\n        () => { this.is_loading = false; }\r\n      )\r\n      .subscribe(\r\n        (data) => {\r\n          this.is_loading = false;\r\n\r\n          alert(data['message']);\r\n          if (data['success'] == true) {\r\n            this.router.navigate(['/table-and-orders']);\r\n            \r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  newItemChanged(event:any)\r\n  {\r\n    this.new_item.rate = event.value.price;\r\n    this.new_item.qty = 1;\r\n    // let item_id = event.target.value;\r\n    // let item = this.items.filter( item => parseInt(item.id) === parseInt(item_id) )[0];\r\n    // this.new_item.rate = item.price;\r\n  }\r\n\r\n  removeItem(i)\r\n  {\r\n    let r = confirm(\"Are you sure to delete the item?\");\r\n\r\n    if( r != true )\r\n    {\r\n      return; \r\n    }\r\n\r\n    let removed_items = this.order.order_details.splice(i, 1);\r\n    this.deleted_details.push( removed_items[0] );\r\n    \r\n  }\r\n\r\n  addNewItem()\r\n  {\r\n    if( this.new_item.id == 0 || this.new_item.qty == 0 )\r\n    {\r\n      alert(\"Please specify Item and Qty\");\r\n      return;\r\n    }\r\n\r\n    \r\n    let item = this.items.filter(item => parseInt(item.id) == this.new_item.id )[0];\r\n    this.order.order_details.push(\r\n      {\r\n        detail_id: null,\r\n        item_id: this.new_item.id,\r\n        item_name: item.name,\r\n        item_notes: this.new_item.item_notes,\r\n        qty: this.new_item.qty,\r\n        rate: this.new_item.rate,\r\n      }\r\n    );\r\n\r\n    this.new_item.qty = 1;\r\n\r\n    \r\n    this.resetNewItem();\r\n\r\n\r\n  }\r\n\r\n  resetNewItem()\r\n  {\r\n    this.new_item = {\r\n      id:0,\r\n      qty:1,\r\n      rate:0,\r\n      item_notes: '',\r\n    };\r\n  }\r\n\r\n  decreaseNewQty()\r\n  {\r\n    this.new_item.qty--;\r\n\r\n    if (this.new_item.qty < 0)\r\n    {\r\n      this.new_item.qty = 0;\r\n    }\r\n  }\r\n\r\n  increaseNewQty()\r\n  {\r\n    this.new_item.qty++;\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/order/order.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/cancelled-orders-report/cancelled-orders-report.component.css\n// module id = ./src/app/reports/cancelled-orders-report/cancelled-orders-report.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n    <h1>\\r\\n        Cancelled Orders Report\\r\\n        <!-- <small>Version 2.0</small> -->\\r\\n    </h1>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-primary\\\">\\r\\n\\r\\n                <div class=\\\"box-body\\\">\\r\\n\\r\\n                    <div class=\\\"hidden-print\\\">\\r\\n                        <app-dates-filter (onShowBtnClicked)=\\\"showReport($event)\\\"></app-dates-filter>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"box box-success\\\">\\r\\n                        <div class=\\\"box-header with-border\\\">\\r\\n                            <h3 class=\\\"box-title\\\">Cancelled Orders Report</h3>\\r\\n                        </div>\\r\\n\\r\\n                        <p>From: <b>{{from | date:'short'}}</b></p>\\r\\n                        <p>To: <b>{{to | date:'short'}}</b></p>\\r\\n\\r\\n                        <div class=\\\"box-body\\\">\\r\\n\\r\\n                            <app-items-list-dialog [show_action_columns]=\\\"false\\\" [items_detail]=\\\"order_data.order_details\\\" [(dialogVisibility)]=\\\"is_order_modal_visible\\\"></app-items-list-dialog>\\r\\n\\r\\n                            <table class=\\\"table table-condensed table-bordered table-hover\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th>Order ID</th>\\r\\n                                        <th>Order Amount</th>\\r\\n                                        <th>Cancellation Remarks</th>\\r\\n                                        <th>Cancelled By</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let row of report_data\\\">\\r\\n                                        <td>\\r\\n                                            <a style=\\\"cursor: pointer;\\\" (click)=\\\"showOrder(row.id)\\\">{{row.id}}</a>\\r\\n                                        </td>\\r\\n                                        <td>{{row.amount | currency:' '}}</td>\\r\\n                                        <td>{{row.cancellation_remarks}}</td>\\r\\n                                        <td>{{row.cancelled_by}}</td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n\\r\\n\\r\\n                            </table>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/cancelled-orders-report/cancelled-orders-report.component.html\n// module id = ./src/app/reports/cancelled-orders-report/cancelled-orders-report.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ReportsService } from '../../services/reports.service';\r\nimport { OrdersService } from '../../services/orders.service';\r\n\r\n@Component({\r\n  selector: 'app-cancelled-orders-report',\r\n  templateUrl: './cancelled-orders-report.component.html',\r\n  styleUrls: ['./cancelled-orders-report.component.css']\r\n})\r\nexport class CancelledOrdersReportComponent implements OnInit {\r\n\r\n  report_data: any;\r\n\r\n  from: '';\r\n  to: '';\r\n\r\n  is_order_modal_visible=false;\r\n  order_data:any={\r\n    order_details:[],\r\n  }\r\n\r\n  constructor(private reportsService: ReportsService, private orderService: OrdersService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  showReport(event: any) {\r\n    this.reportsService.cancelledOrdersReport(event.from, event.to)\r\n      .subscribe(data => {\r\n\r\n        this.from = event.from;\r\n        this.to = event.to;\r\n\r\n        this.report_data = data;\r\n      });\r\n  }\r\n\r\n  showOrder(order_id){\r\n    this.order_data.order_details = [];\r\n    this.is_order_modal_visible = true;\r\n    this.orderService.getOrderById(order_id)\r\n    .subscribe(data => {\r\n\r\n      data['order_details'].forEach(order_detail => {\r\n        this.order_data.order_details.push({\r\n          item_name: order_detail.item_name,\r\n          qty: order_detail.qty,\r\n          rate: order_detail.rate,\r\n          amount: order_detail.qty * order_detail.rate,\r\n        })\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reports/cancelled-orders-report/cancelled-orders-report.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/collection-report/collection-report.component.css\n// module id = ./src/app/reports/collection-report/collection-report.component.css\n// module chunks = main","module.exports = \"<p>\\r\\n  collection-report works!\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/collection-report/collection-report.component.html\n// module id = ./src/app/reports/collection-report/collection-report.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-collection-report',\r\n  templateUrl: './collection-report.component.html',\r\n  styleUrls: ['./collection-report.component.css']\r\n})\r\nexport class CollectionReportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reports/collection-report/collection-report.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/edits-after-print/edits-after-print.component.css\n// module id = ./src/app/reports/edits-after-print/edits-after-print.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n    <h1>\\r\\n        Edits After Print Report\\r\\n        <!-- <small>Version 2.0</small> -->\\r\\n    </h1>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-primary\\\">\\r\\n\\r\\n                <div class=\\\"box-body\\\">\\r\\n\\r\\n                    <app-items-list-dialog [show_action_columns]=\\\"true\\\" [items_detail]=\\\"edit_data.edit_details\\\" [(dialogVisibility)]=\\\"is_edit_detail_modal_visible\\\"></app-items-list-dialog>\\r\\n\\r\\n                    <div class=\\\"hidden-print\\\">\\r\\n                        <app-dates-filter (onShowBtnClicked)=\\\"showReport($event)\\\"></app-dates-filter>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"box box-success\\\">\\r\\n                        <div class=\\\"box-header with-border\\\">\\r\\n                            <h3 class=\\\"box-title\\\">Edits After Print Report</h3>\\r\\n                        </div>\\r\\n\\r\\n                        <p>From: <b>{{from | date:'short'}}</b></p>\\r\\n                        <p>To: <b>{{to | date:'short'}}</b></p>\\r\\n\\r\\n                        <div class=\\\"box-body\\\">\\r\\n\\r\\n                            <table class=\\\"table table-condensed table-bordered table-hover\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th>Order ID</th>\\r\\n                                        <th>Edit Type</th>\\r\\n                                        <th>Remarks</th>\\r\\n                                        <th>Before Amount</th>\\r\\n                                        <th>After Amount</th>\\r\\n                                        <th>Edited By</th>\\r\\n                                        <th>Approved By</th>\\r\\n                                        <th>Edited At</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let row of report_data\\\">\\r\\n                                        <td>\\r\\n                                            <div *ngIf=\\\"row.to_edit_id == null\\\">{{row.order_id}}</div>\\r\\n                                            <a *ngIf=\\\"row.to_edit_id != null\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"showEditDetail(row.to_edit_id)\\\">{{row.order_id}}</a>\\r\\n                                        </td>\\r\\n                                        <td>{{row.edit_type}}</td>\\r\\n                                        <td>{{row.remarks}}</td>\\r\\n                                        <td>{{row.before_amount |currency:\\\" \\\" }}</td>\\r\\n                                        <td>{{row.after_amount |currency:\\\" \\\" }}</td>\\r\\n                                        <td>{{row.edited_by_name}}</td>\\r\\n                                        <td>{{row.approved_by_name}}</td>\\r\\n                                        <td>{{row.created_at | date:'dd-MMM-yyyy HH:mm a' }}</td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n\\r\\n                                <tfoot *ngIf=\\\"report_data == null || report_data.length == 0\\\">\\r\\n                                    <tr>\\r\\n                                        <td colspan=\\\"10\\\" class=\\\"text-center\\\"><b>No Data Found</b></td>\\r\\n                                    </tr>\\r\\n                                </tfoot>\\r\\n                            </table>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/edits-after-print/edits-after-print.component.html\n// module id = ./src/app/reports/edits-after-print/edits-after-print.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ReportsService } from '../../services/reports.service';\r\nimport { OrdersService } from '../../services/orders.service';\r\n\r\n@Component({\r\n  selector: 'app-edits-after-print',\r\n  templateUrl: './edits-after-print.component.html',\r\n  styleUrls: ['./edits-after-print.component.css']\r\n})\r\nexport class EditsAfterPrintComponent implements OnInit {\r\n\r\n  report_data;\r\n\r\n  from: '';\r\n  to: '';\r\n\r\n  is_edit_detail_modal_visible=false;\r\n  edit_data:any={\r\n    edit_details:[],\r\n  }\r\n\r\n  constructor(private reportsService: ReportsService, private ordersService: OrdersService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  showReport(event:any)\r\n  {\r\n    this.reportsService.editsAfterPrintReport(event.from, event.to, event.show_actual)\r\n      .subscribe( data => {\r\n\r\n        this.from = event.from;\r\n        this.to = event.to;\r\n\r\n        this.report_data = data;\r\n      });\r\n  }\r\n\r\n  showEditDetail(to_edit_id)\r\n  {\r\n    this.edit_data.edit_details = [];\r\n    this.is_edit_detail_modal_visible = true;\r\n    this.ordersService.getOrderEditById(to_edit_id)\r\n      .subscribe(data=>{\r\n        data['to_edit_details'].forEach(edit_detail => {\r\n          this.edit_data.edit_details.push({\r\n            item_name: edit_detail.item_name,\r\n            qty: edit_detail.qty,\r\n            rate: edit_detail.rate,\r\n            amount: edit_detail.amount,\r\n            action: edit_detail.edit_type,\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reports/edits-after-print/edits-after-print.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/items-list-dialog/items-list-dialog.component.css\n// module id = ./src/app/reports/items-list-dialog/items-list-dialog.component.css\n// module chunks = main","module.exports = \"<p-dialog header=\\\"Detail\\\" [modal]=\\\"true\\\" [(visible)]=\\\"dialogVisibility\\\">\\n    <h4>Items</h4>\\n    \\n    <table class=\\\"table table-bordered table-condensed table-hover\\\">\\n        <thead>\\n            <tr>\\n                <th>Item</th>\\n                <th>Qty</th>\\n                <th>Rate</th>\\n                <th>Amount</th>\\n                <th *ngIf=\\\"show_action_columns\\\">Action</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let row of items_detail\\\">\\n                <td>{{row.item_name}}</td>\\n                <td>{{row.qty | currency:' '}}</td>\\n                <td>{{row.rate | currency:' '}}</td>\\n                <td>{{row.amount | currency:' '}}</td>\\n                <td *ngIf=\\\"show_action_columns\\\">{{row.action}}</td>\\n            </tr>\\n        </tbody>\\n    </table>\\n    \\n</p-dialog>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/items-list-dialog/items-list-dialog.component.html\n// module id = ./src/app/reports/items-list-dialog/items-list-dialog.component.html\n// module chunks = main","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-items-list-dialog',\n  templateUrl: './items-list-dialog.component.html',\n  styleUrls: ['./items-list-dialog.component.css']\n})\nexport class ItemsListDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  dialogVisibilityValue : boolean;\n\n  @Output()\n  dialogVisibilityChange = new EventEmitter<boolean>();\n\n  @Input()\n  get dialogVisibility(){\n    return this.dialogVisibilityValue;\n  }\n\n  set dialogVisibility(val) {\n    this.dialogVisibilityValue = val;\n    this.dialogVisibilityChange.emit(this.dialogVisibilityValue);\n  }\n\n  @Input()\n  items_detail;\n\n  @Input()\n  show_action_columns;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reports/items-list-dialog/items-list-dialog.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/rating-add-edit/rating-add-edit.component.css\n// module id = ./src/app/reports/rating-add-edit/rating-add-edit.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n  <h1>\\r\\n      Add / Edit Rating\\r\\n  </h1>\\r\\n\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"box box-primary\\\">\\r\\n\\r\\n              <div class=\\\"box-body\\\">\\r\\n\\r\\n                <form class=\\\"form-horizontal\\\" (submit)=\\\"saveRating()\\\">\\r\\n                  \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"order_id\\\" class=\\\"col-sm-2 control-label\\\">Order ID:</label>\\r\\n                        <div class=\\\"col-sm-10\\\">\\r\\n                            <input type=\\\"text\\\" name=\\\"order_id\\\" [(ngModel)]=\\\"order_id\\\" id=\\\"order_id\\\" class=\\\"form-control\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"food_rating\\\" class=\\\"col-sm-2 control-label\\\">Food Rating:</label>\\r\\n                        <div class=\\\"col-sm-10\\\">\\r\\n                            <input type=\\\"number\\\" name=\\\"food_rating\\\" [(ngModel)]=\\\"food_rating\\\" id=\\\"food_rating\\\" min=\\\"0\\\" max=\\\"5\\\" class=\\\"form-control\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"service_rating\\\" class=\\\"col-sm-2 control-label\\\">Service Rating:</label>\\r\\n                        <div class=\\\"col-sm-10\\\">\\r\\n                            <input type=\\\"number\\\" name=\\\"service_rating\\\" [(ngModel)]=\\\"service_rating\\\" id=\\\"service_rating\\\" min=\\\"0\\\" max=\\\"5\\\" class=\\\"form-control\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"ambiance_rating\\\" class=\\\"col-sm-2 control-label\\\">Ambiance Rating:</label>\\r\\n                        <div class=\\\"col-sm-10\\\">\\r\\n                            <input type=\\\"number\\\" name=\\\"ambiance_rating\\\" [(ngModel)]=\\\"ambiance_rating\\\" id=\\\"ambiance_rating\\\" min=\\\"0\\\" max=\\\"5\\\" class=\\\"form-control\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"text-right\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> Save</button>\\r\\n                    </div>\\r\\n                \\r\\n                </form>\\r\\n\\r\\n              </div>\\r\\n\\r\\n          </div>\\r\\n      </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/rating-add-edit/rating-add-edit.component.html\n// module id = ./src/app/reports/rating-add-edit/rating-add-edit.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ConfigService } from '../../services/config.service';\r\n\r\n@Component({\r\n  selector: 'app-rating-add-edit',\r\n  templateUrl: './rating-add-edit.component.html',\r\n  styleUrls: ['./rating-add-edit.component.css']\r\n})\r\nexport class RatingAddEditComponent implements OnInit {\r\n\r\n  constructor(private http: HttpClient, private config: ConfigService) { }\r\n\r\n  order_id='';\r\n  food_rating='';\r\n  service_rating='';\r\n  ambiance_rating='';\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  saveRating()\r\n  {\r\n    \r\n    let fd = new FormData();\r\n\r\n    fd.append('order_id', this.order_id);\r\n    fd.append('food_rating', this.food_rating);\r\n    fd.append('service_rating', this.service_rating);\r\n    fd.append('ambiance_rating', this.ambiance_rating);\r\n\r\n    this.http.post(this.config.base_url + '/api/save-rating', fd)\r\n      .subscribe(data=>{\r\n        alert(data['message']);\r\n      });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reports/rating-add-edit/rating-add-edit.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/rating-report/rating-report.component.css\n// module id = ./src/app/reports/rating-report/rating-report.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n  <h1>\\r\\n      Rating Report\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"showRatingAddEditForm()\\\">Add/Edit Rating</button>\\r\\n  </h1>\\r\\n\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"hidden-print col-md-12\\\">\\r\\n        <app-dates-filter [hidden_checkbox_available]=\\\"false\\\" (onShowBtnClicked)=\\\"showReport($event)\\\"></app-dates-filter>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"box box-primary\\\">\\r\\n\\r\\n            <div class=\\\"box-body\\\">\\r\\n                \\r\\n            <p>From: <b>{{from | date:'short'}}</b></p>\\r\\n            <p>To: <b>{{to | date:'short'}}</b></p>\\r\\n\\r\\n            \\r\\n            <table class=\\\"table table-hover table-bordered table-condensed\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Order Taken By</th>\\r\\n                        <th>Order ID</th>\\r\\n                        <th>Order Date/Time</th>\\r\\n                        <th>Food Rating</th>\\r\\n                        <th>Service Rating</th>\\r\\n                        <th>Ambiance Rating</th>\\r\\n                        <th>Average Rating</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let row of report_data\\\">\\r\\n                        <td>{{row.order_taken_by}}</td>\\r\\n                        <td>{{row.order_id}}</td>\\r\\n                        <td>{{row.order_datetime | date:'dd-MMM-yyyy HH:mm a'}}</td>\\r\\n                        <td>{{row.food_rating}}</td>\\r\\n                        <td>{{row.service_rating}}</td>\\r\\n                        <td>{{row.ambiance_rating}}</td>\\r\\n                        <td>{{ (row.food_rating + row.service_rating + row.ambiance_rating) / 3 | currency:' ' }}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n                            \\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/rating-report/rating-report.component.html\n// module id = ./src/app/reports/rating-report/rating-report.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ReportsService } from '../../services/reports.service';\r\n\r\n@Component({\r\n  selector: 'app-rating-report',\r\n  templateUrl: './rating-report.component.html',\r\n  styleUrls: ['./rating-report.component.css']\r\n})\r\nexport class RatingReportComponent implements OnInit {\r\n\r\n  constructor(private router: Router, private reportsService: ReportsService) { }\r\n\r\n  from: '';\r\n  to: '';\r\n\r\n  report_data;\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  showReport(event:any)\r\n  {\r\n    this.reportsService.ratingsReport(event.from, event.to, event.show_actual)\r\n      .subscribe( data => {\r\n\r\n        this.from = event.from;\r\n        this.to = event.to;\r\n\r\n        this.report_data = data;\r\n      });\r\n  }\r\n\r\n  showRatingAddEditForm()\r\n  {\r\n    this.router.navigate(['/rating-add-edit']);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reports/rating-report/rating-report.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/sales-by-item-report/sales-by-item-report.component.css\n// module id = ./src/app/reports/sales-by-item-report/sales-by-item-report.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n    <h1>\\r\\n        Sales Report By Item\\r\\n        <!-- <small>Version 2.0</small> -->\\r\\n    </h1>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-primary\\\">\\r\\n\\r\\n                <div class=\\\"box-body\\\">\\r\\n\\r\\n                    <div class=\\\"hidden-print\\\">\\r\\n                        <app-dates-filter (onShowBtnClicked)=\\\"showReport($event)\\\"></app-dates-filter>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"box box-success\\\">\\r\\n                        <div class=\\\"box-header with-border\\\">\\r\\n                            <h3 class=\\\"box-title\\\">Sales Report By Item</h3>\\r\\n                        </div>\\r\\n\\r\\n                        <p>From: <b>{{from | date:'short'}}</b></p>\\r\\n                        <p>To: <b>{{to | date:'short'}}</b></p>\\r\\n\\r\\n                        <div class=\\\"box-body\\\">\\r\\n\\r\\n                            <div *ngFor=\\\"let category of report_data | groupBy: 'category' | keys\\\">\\r\\n                                <h3 style=\\\"background-color:lightgray\\\"><small>Category: </small>{{category}}</h3>\\r\\n\\r\\n                                <div *ngFor=\\\"let group of report_data | filterBy: ['category'] : category | groupBy: 'item_group' | keys\\\">\\r\\n                                    <h4 style=\\\"background-color:lightgray\\\"><small>Group: </small>{{group}}</h4>\\r\\n\\r\\n                                    <table class=\\\"table table-condensed table-bordered table-hover\\\">\\r\\n                                        <thead>\\r\\n                                            <tr>\\r\\n                                                <th class=\\\"col-md-2\\\">Category</th>\\r\\n                                                <th class=\\\"col-md-2\\\">Group</th>\\r\\n                                                <th class=\\\"col-md-4\\\">Item</th>\\r\\n                                                <th class=\\\" col-md-2 text-center \\\">Qty</th>\\r\\n                                                <th class=\\\"col-md-2 text-center \\\">Amount</th>\\r\\n                                            </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody>\\r\\n                                            <tr *ngFor=\\\"let row of report_data | filterBy:['category'] : category | filterBy:['item_group'] : group \\\">\\r\\n\\r\\n                                                <td>{{row.category}}</td>\\r\\n                                                <td>{{row.item_group}}</td>\\r\\n                                                <td>{{row.name}}</td>\\r\\n                                                <td class=\\\"text-center \\\">{{row.qty | currency:' '}}</td>\\r\\n                                                <td class=\\\"text-center \\\">{{row.amount | currency:' '}}</td>\\r\\n                                            </tr>\\r\\n\\r\\n                                            <tr class=\\\"top-bottom-borders\\\">\\r\\n                                                <td>{{category}}</td>\\r\\n                                                <td>{{group}} Total</td>\\r\\n                                                <td></td>\\r\\n                                                <td class=\\\"text-center \\\">{{report_data | filterBy:['category'] : category | filterBy:['item_group'] : group | pluck:'qty' | sum | currency:' '}}</td>\\r\\n                                                <td class=\\\"text-center \\\">{{report_data | filterBy:['category'] : category | filterBy:['item_group'] : group | pluck:'amount' | sum | currency:' '}}</td>\\r\\n                                            </tr>\\r\\n                                        </tbody>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"text-right\\\">\\r\\n                                    <h3><small>Category {{category}} Total Qty: </small>{{report_data | filterBy:['category'] : category | pluck:'qty' | sum | currency:' '}}</h3>\\r\\n                                    <h3><small>Category {{category}} Total Amount: </small>{{report_data | filterBy:['category'] : category | pluck:'amount' | sum | currency:' '}}</h3>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                            <hr>\\r\\n\\r\\n                            <div *ngIf=\\\"ent_report_data.length> 0\\\">\\r\\n                                <h3 class=\\\"text-center\\\">Ent Bills</h3>\\r\\n                                <table class=\\\"table table-condensed table-bordered table-hover\\\">\\r\\n                                    <thead>\\r\\n                                        <tr>\\r\\n                                            <th>Category</th>\\r\\n                                            <th>Group</th>\\r\\n                                            <th>Item</th>\\r\\n                                            <th class=\\\"col-md-2 text-center\\\">Qty</th>\\r\\n                                            <th class=\\\"col-md-2 text-center\\\">Amount</th>\\r\\n                                        </tr>\\r\\n                                    </thead>\\r\\n                                    <tbody>\\r\\n                                        <tr [class.grand-total]=\\\"row.name == null\\\" *ngFor=\\\"let row of ent_report_data\\\">\\r\\n                                            <td>{{row.category}}</td>\\r\\n                                            <td>{{row.item_group}}</td>\\r\\n                                            <td>{{row.name}}</td>\\r\\n                                            <td class=\\\"text-center\\\">{{row.qty | currency:' '}}</td>\\r\\n                                            <td class=\\\"text-center\\\">{{row.amount | currency:' '}}</td>\\r\\n                                        </tr>\\r\\n                                    </tbody>\\r\\n\\r\\n                                    <tfoot *ngIf=\\\"ent_report_data == null || ent_report_data.length == 0\\\">\\r\\n                                        <tr>\\r\\n                                            <td colspan=\\\"10\\\" class=\\\"text-center\\\"><b>No Data Found</b></td>\\r\\n                                        </tr>\\r\\n                                    </tfoot>\\r\\n                                </table>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                            <hr>\\r\\n                            <h3 class=\\\"text-center\\\">Summary</h3>\\r\\n                            <app-summary [report_summary]=\\\"report_summary\\\"></app-summary>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/sales-by-item-report/sales-by-item-report.component.html\n// module id = ./src/app/reports/sales-by-item-report/sales-by-item-report.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ReportsService } from '../../services/reports.service';\r\n\r\n@Component({\r\n  selector: 'app-sales-by-item-report',\r\n  templateUrl: './sales-by-item-report.component.html',\r\n  styleUrls: ['./sales-by-item-report.component.css']\r\n})\r\nexport class SalesByItemReportComponent implements OnInit {\r\n\r\n  report_data:any;\r\n  ent_report_data:any = new Array();\r\n  report_summary:any = {\r\n    'receipt_detail': [],\r\n    'st_and_discount': {\r\n      'total_sales_tax': 0,\r\n      'total_discount': 0,\r\n    }\r\n  };\r\n\r\n  from: '';\r\n  to: '';\r\n\r\n  constructor(\r\n    private reportsService: ReportsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  showReport(event:any)\r\n  {\r\n    this.reportsService.salesReportByItem(event.from, event.to, event.show_actual)\r\n      .subscribe( data => { \r\n\r\n        this.from = event.from;\r\n        this.to = event.to;\r\n\r\n        this.report_data = data['report_detail']['orders'];\r\n        this.ent_report_data = data['report_detail']['ent_orders'];\r\n        this.report_summary = data['report_summary']; \r\n\r\n        this.report_data.forEach(element => {\r\n          element.qty = +element.qty;\r\n          element.amount = +element.amount;\r\n        });\r\n\r\n      });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reports/sales-by-item-report/sales-by-item-report.component.ts","module.exports = \".cash-receipt {\\r\\n    background-color: lightgreen;\\r\\n}\\r\\n\\r\\n.other-receipt {\\r\\n    background-color: lightcoral;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/sales-by-order-report/sales-by-order-report.component.css\n// module id = ./src/app/reports/sales-by-order-report/sales-by-order-report.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n    <h1>\\r\\n        Sales Report By Order\\r\\n        <!-- <small>Version 2.0</small> -->\\r\\n    </h1>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-primary\\\">\\r\\n\\r\\n                <div class=\\\"box-body\\\">\\r\\n\\r\\n                    <div class=\\\"hidden-print\\\">\\r\\n                        <app-dates-filter (onShowBtnClicked)=\\\"showReport($event)\\\"></app-dates-filter>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"box box-success\\\">\\r\\n                        <div class=\\\"box-header with-border\\\">\\r\\n                            <h3 class=\\\"box-title\\\">Sales Report By Order</h3>\\r\\n                        </div>\\r\\n\\r\\n                        <p>From: <b>{{from | date:'short'}}</b></p>\\r\\n                        <p>To: <b>{{to | date:'short'}}</b></p>\\r\\n\\r\\n                        <div class=\\\"box-body\\\">\\r\\n\\r\\n                            <app-items-list-dialog [show_action_columns]=\\\"false\\\" [items_detail]=\\\"invoice_data.invoice_details\\\" [(dialogVisibility)]=\\\"is_invoice_modal_visible\\\"></app-items-list-dialog>\\r\\n\\r\\n                            <table class=\\\"table table-condensed table-bordered table-hover\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th>Invoice ID</th>\\r\\n                                        <th>Order ID</th>\\r\\n                                        <th>Order Type</th>\\r\\n                                        <th>Order Date/Time</th>\\r\\n                                        <th>Cover</th>\\r\\n                                        <th>Payment Type</th>\\r\\n                                        <th>Closed At</th>\\r\\n                                        <th>Order Taker</th>\\r\\n                                        <th class=\\\"col-md-2 col-sm-2 text-center\\\">Discount</th>\\r\\n                                        <th>Sales Tax</th>\\r\\n                                        <th class=\\\"col-md-2 col-sm-2 text-center\\\">Amount</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr [class.grand-total]=\\\"row.id == null\\\" *ngFor=\\\"let row of report_data\\\">\\r\\n                                        <td>\\r\\n                                            <a style=\\\"cursor: pointer;\\\" (click)=\\\"showInvoice(row.id, row.order_datetime)\\\">{{row.id}}</a>\\r\\n                                        </td>\\r\\n                                        <td>{{row.order_id}}</td>\\r\\n                                        <td>{{row.order_type}}</td>\\r\\n                                        <td>{{row.order_datetime | date:'dd-MMM-yyyy HH:mm a'}}</td>\\r\\n                                        <td>{{row.cover}}</td>\\r\\n                                        <td class=\\\"{{ row.received_through == 'Cash' ? 'cash-receipt' : 'other-receipt' }}\\\">{{row.received_through}}</td>\\r\\n                                        <td>{{row.closing_time | date:'dd-MMM-yyyy HH:mm a'}}</td>\\r\\n                                        <td>{{row.created_by}}</td>\\r\\n                                        <td class=\\\"text-center\\\">{{row.discount | currency:' '}}</td>\\r\\n                                        <td class=\\\"text-center\\\">{{row.sales_tax | currency:' '}}</td>\\r\\n                                        <td class=\\\"text-center\\\">{{row.amount | currency:' '}}</td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n\\r\\n                                <tfoot *ngIf=\\\"report_data == null || report_data.length == 0\\\">\\r\\n                                    <tr>\\r\\n                                        <td colspan=\\\"10\\\" class=\\\"text-center\\\"><b>No Data Found</b></td>\\r\\n                                    </tr>\\r\\n                                </tfoot>\\r\\n                            </table>\\r\\n\\r\\n\\r\\n\\r\\n                            <div *ngIf=\\\"ent_report_data.length > 1\\\">\\r\\n                                <hr>\\r\\n                                <h3 class=\\\"text-center\\\">Ent Orders</h3>\\r\\n                                <table class=\\\"table table-condensed table-bordered table-hover\\\">\\r\\n                                    <thead>\\r\\n                                        <tr>\\r\\n                                            <th>Ent ID</th>\\r\\n                                            <th>Order ID</th>\\r\\n                                            <th>Order Type</th>\\r\\n                                            <th>Ent Remarks</th>\\r\\n                                            <th>Cover</th>\\r\\n                                            <th>Payment Type</th>\\r\\n                                            <th>Closed At</th>\\r\\n                                            <th class=\\\"col-md-2 col-sm-2 text-center\\\">Discount</th>\\r\\n                                            <th>Sales Tax</th>\\r\\n                                            <th class=\\\"col-md-2 col-sm-2 text-center\\\">Amount</th>\\r\\n                                        </tr>\\r\\n                                    </thead>\\r\\n                                    <tbody>\\r\\n                                        <tr [class.grand-total]=\\\"row.id == null\\\" *ngFor=\\\"let row of ent_report_data\\\">\\r\\n                                            <td>{{row.id}}</td>\\r\\n                                            <td>{{row.order_id}}</td>\\r\\n                                            <td>{{row.order_type}}</td>\\r\\n                                            <td>{{row.ent_remarks}}</td>\\r\\n                                            <td>{{row.cover}}</td>\\r\\n                                            <td class=\\\"{{ row.received_through == 'Cash' ? 'cash-receipt' : 'other-receipt' }}\\\">{{row.received_through}}</td>\\r\\n                                            <td>{{row.closing_time | date:'dd-MMM-yyyy HH:mm a'}}</td>\\r\\n                                            <td class=\\\"text-center\\\">{{row.discount | currency:' '}}</td>\\r\\n                                            <td class=\\\"text-center\\\">{{row.sales_tax | currency:' '}}</td>\\r\\n                                            <td class=\\\"text-center\\\">{{row.amount | currency:' '}}</td>\\r\\n                                        </tr>\\r\\n                                    </tbody>\\r\\n\\r\\n                                    <tfoot *ngIf=\\\"report_data == null || report_data.length == 0\\\">\\r\\n                                        <tr>\\r\\n                                            <td colspan=\\\"10\\\" class=\\\"text-center\\\"><b>No Data Found</b></td>\\r\\n                                        </tr>\\r\\n                                    </tfoot>\\r\\n                                </table>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                            <hr>\\r\\n                            <h3 class=\\\"text-center\\\">Summary</h3>\\r\\n                            <app-summary [report_summary]=\\\"report_summary\\\"></app-summary>\\r\\n\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/sales-by-order-report/sales-by-order-report.component.html\n// module id = ./src/app/reports/sales-by-order-report/sales-by-order-report.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ReportsService } from '../../services/reports.service';\r\n\r\n@Component({\r\n  selector: 'app-sales-by-order-report',\r\n  templateUrl: './sales-by-order-report.component.html',\r\n  styleUrls: ['./sales-by-order-report.component.css']\r\n})\r\nexport class SalesByOrderReportComponent implements OnInit {\r\n\r\n  report_data;\r\n  ent_report_data:any = new Array();\r\n  report_summary:any = {\r\n    'receipt_detail': [],\r\n    'st_and_discount': {\r\n      'total_sales_tax': 0,\r\n      'total_discount': 0,\r\n    }\r\n  };\r\n\r\n  from: '';\r\n  to: '';\r\n\r\n  is_invoice_modal_visible = false;\r\n  is_actual = false;\r\n  invoice_data:any = {\r\n    'invoice_details': [],\r\n  };\r\n\r\n  constructor(\r\n    private reportsService: ReportsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  showReport(event:any)\r\n  {\r\n    this.is_actual = event.show_actual;\r\n    this.reportsService.salesReportByOrder(event.from, event.to, event.show_actual)\r\n      .subscribe( data => {\r\n\r\n        this.from = event.from;\r\n        this.to = event.to;\r\n\r\n        this.report_data = data['report_detail']['orders'];\r\n        this.ent_report_data = data['report_detail']['ent_orders'];\r\n        this.report_summary = data['report_summary'];\r\n      });\r\n  }\r\n\r\n  showInvoice(invoice_id, invoice_datetime)\r\n  {\r\n    this.invoice_data.invoice_details = [];\r\n    this.is_invoice_modal_visible = true;\r\n    this.reportsService.getInvoiceData(invoice_id, invoice_datetime, this.is_actual)\r\n      .subscribe(data =>{\r\n        this.invoice_data.invoice_details = data;\r\n        console.log(this.invoice_data);\r\n      });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reports/sales-by-order-report/sales-by-order-report.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/summary/summary.component.css\n// module id = ./src/app/reports/summary/summary.component.css\n// module chunks = main","module.exports = \"\\r\\n                            \\r\\n<table class=\\\"table table-bordered table-condensed table-hover\\\">\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let receipt_detail of report_summary.receipt_detail\\\">\\r\\n            <td>{{receipt_detail.received_through}} Collection</td>\\r\\n            <td>{{receipt_detail.total_received | currency:' '}}</td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n            <td>Discount</td>\\r\\n            <td>{{report_summary.st_and_discount.total_discount | currency:' ' }}</td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n            <td>Sales Tax</td>\\r\\n            <td>{{report_summary.st_and_discount.total_sales_tax | currency:' ' }}</td>\\r\\n        </tr>\\r\\n\\r\\n    </tbody>\\r\\n</table>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/summary/summary.component.html\n// module id = ./src/app/reports/summary/summary.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-summary',\r\n  templateUrl: './summary.component.html',\r\n  styleUrls: ['./summary.component.css']\r\n})\r\nexport class SummaryComponent implements OnInit {\r\n\r\n  @Input() report_summary:any = {\r\n    'receipt_detail': [],\r\n    'st_and_discount': {\r\n      'total_sales_tax': 0,\r\n      'total_discount': 0,\r\n    }\r\n  };  \r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reports/summary/summary.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/top-least-items-report/top-least-items-report.component.css\n// module id = ./src/app/reports/top-least-items-report/top-least-items-report.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n  <h1>\\r\\n      Top and Least Items Report\\r\\n      <!-- <small>Version 2.0</small> -->\\r\\n  </h1>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"box box-primary\\\">\\r\\n\\r\\n              <div class=\\\"box-body\\\">\\r\\n\\r\\n                  <div class=\\\"hidden-print\\\">\\r\\n                      <app-dates-filter (onShowBtnClicked)=\\\"showReport($event)\\\"></app-dates-filter>\\r\\n                  </div>\\r\\n\\r\\n                  <app-box [type]=\\\"'default'\\\" [title]=\\\"'Top and Least Items Report'\\\">\\r\\n                      <p>From: <b>{{from | date:'short'}}</b></p>\\r\\n                      <p>To: <b>{{to | date:'short'}}</b></p>\\r\\n\\r\\n                      <app-box [type]=\\\"'success'\\\" [title]=\\\"'Top Selling Items'\\\">\\r\\n                        \\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <app-box [type]=\\\"'default'\\\" [title]=\\\"'By Qty'\\\">\\r\\n                                <p-chart type=\\\"pie\\\" [data]=\\\"top_by_qty_chart_data\\\"></p-chart>\\r\\n                            </app-box>  \\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <app-box [type]=\\\"'default'\\\" [title]=\\\"'By Amount'\\\">\\r\\n                                <p-chart type=\\\"pie\\\" [data]=\\\"top_by_amount_chart_data\\\"></p-chart>\\r\\n                            </app-box>  \\r\\n                        </div>\\r\\n\\r\\n                      </app-box>\\r\\n\\r\\n                      <app-box [type]=\\\"'danger'\\\" [title]=\\\"'Least Selling Items'\\\">\\r\\n                        \\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <app-box [type]=\\\"'default'\\\" [title]=\\\"'By Qty'\\\">\\r\\n                                <p-chart type=\\\"pie\\\" [data]=\\\"least_by_qty_chart_data\\\"></p-chart>\\r\\n                            </app-box>  \\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <app-box [type]=\\\"'default'\\\" [title]=\\\"'By Amount'\\\">\\r\\n                                <p-chart type=\\\"pie\\\" [data]=\\\"least_by_amount_chart_data\\\"></p-chart>\\r\\n                            </app-box>  \\r\\n                        </div>\\r\\n\\r\\n                      </app-box>\\r\\n\\r\\n                      \\r\\n\\r\\n                  </app-box>\\r\\n\\r\\n              </div>\\r\\n          </div>\\r\\n\\r\\n      </div>\\r\\n  </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/top-least-items-report/top-least-items-report.component.html\n// module id = ./src/app/reports/top-least-items-report/top-least-items-report.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ReportsService } from '../../services/reports.service';\r\n\r\n@Component({\r\n  selector: 'app-top-least-items-report',\r\n  templateUrl: './top-least-items-report.component.html',\r\n  styleUrls: ['./top-least-items-report.component.css']\r\n})\r\nexport class TopLeastItemsReportComponent implements OnInit {\r\n\r\n  report_data;\r\n  top_by_qty_chart_data:any = null;\r\n  top_by_amount_chart_data:any = null;\r\n  least_by_qty_chart_data:any = null;\r\n  least_by_amount_chart_data:any = null;\r\n\r\n  from: '';\r\n  to: '';\r\n\r\n  constructor(\r\n    private reportsService: ReportsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  generatePieChartData(dataArray)\r\n  {\r\n    var pie_chart_data = {\r\n      labels:[],\r\n      datasets:[\r\n        {\r\n          data:[],\r\n          backgroundColor:[\r\n            \"#FF6384\",\r\n            \"#36A2EB\",\r\n            \"#FFCE56\",\r\n            \"green\",\r\n            \"gray\"\r\n          ],\r\n          hoverBackgroundColor:[\r\n\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n\r\n    pie_chart_data.datasets[0].data = new Array();\r\n    dataArray.forEach(element => {\r\n      pie_chart_data.labels.push(element.name);\r\n      pie_chart_data.datasets[0].data.push(+element.value);\r\n    });\r\n\r\n    return pie_chart_data;\r\n  }\r\n\r\n  showReport(event:any)\r\n  {\r\n    this.reportsService.topAndLeastItemsReport(event.from, event.to, event.show_actual)\r\n      .subscribe( data => {\r\n\r\n        this.from = event.from;\r\n        this.to = event.to;\r\n\r\n        this.report_data = data;\r\n\r\n        this.top_by_qty_chart_data = this.generatePieChartData(this.report_data.top_selling_items_by_qty);\r\n        this.top_by_amount_chart_data = this.generatePieChartData(this.report_data.top_selling_items_by_amount);\r\n\r\n        this.least_by_qty_chart_data = this.generatePieChartData(this.report_data.least_selling_items_by_qty);\r\n        this.least_by_amount_chart_data = this.generatePieChartData(this.report_data.least_selling_items_by_amount);\r\n        \r\n      });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reports/top-least-items-report/top-least-items-report.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/x-report/x-report.component.css\n// module id = ./src/app/reports/x-report/x-report.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n  <h1>\\r\\n      X Report\\r\\n  </h1>\\r\\n\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"box box-primary\\\">\\r\\n\\r\\n            <div class=\\\"box-body\\\">\\r\\n\\r\\n              <div class=\\\"hidden-print\\\">\\r\\n                  <app-dates-filter (onShowBtnClicked)=\\\"showReport($event)\\\"></app-dates-filter>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <div class=\\\"box box-success\\\">\\r\\n                  <div class=\\\"box-header with-border\\\">\\r\\n                      <h3 class=\\\"box-title\\\">X Report</h3>\\r\\n                  </div>\\r\\n\\r\\n                  <p>From: <b>{{from | date:'short'}}</b></p>\\r\\n                  <p>To: <b>{{to | date:'short'}}</b></p>\\r\\n\\r\\n                  <div class=\\\"box-body\\\">\\r\\n\\r\\n                      <div *ngFor=\\\"let category of report_data | groupBy: 'category' | keys\\\">\\r\\n                          <h3 style=\\\"background-color:lightgray\\\"><small>Category: </small>{{category}}</h3>\\r\\n\\r\\n\\r\\n                          <div class=\\\"text-right\\\">\\r\\n                              <h3><small>Category {{category}} Total Qty: </small>{{report_data | filterBy:['category'] : category | pluck:'qty' | sum | currency:' '}}</h3>\\r\\n                              <h3><small>Category {{category}} Total Amount: </small>{{report_data | filterBy:['category'] : category | pluck:'amount' | sum | currency:' '}}</h3>\\r\\n                          </div>\\r\\n\\r\\n                      </div>\\r\\n\\r\\n                      <h3 style=\\\"background-color:lightgray\\\">Total Sales</h3>\\r\\n                      <div class=\\\"text-right\\\">\\r\\n                        <h3><small>Category {{category}} Total Qty: </small>{{report_data  | pluck:'qty' | sum | currency:' '}}</h3>\\r\\n                        <h3><small>Category {{category}} Total Amount: </small>{{report_data | pluck:'amount' | sum | currency:' '}}</h3>\\r\\n                    </div>\\r\\n\\r\\n                      <hr>\\r\\n\\r\\n                      <div *ngIf=\\\"ent_report_data.length> 0\\\">\\r\\n                          <h3 class=\\\"text-center\\\">Ent Bills</h3>\\r\\n                          <table class=\\\"table table-condensed table-bordered table-hover\\\">\\r\\n                              <thead>\\r\\n                                  <tr>\\r\\n                                      <th>Category</th>\\r\\n                                      <th>Group</th>\\r\\n                                      <th>Item</th>\\r\\n                                      <th class=\\\"col-md-2 text-center\\\">Qty</th>\\r\\n                                      <th class=\\\"col-md-2 text-center\\\">Amount</th>\\r\\n                                  </tr>\\r\\n                              </thead>\\r\\n                              <tbody>\\r\\n                                  <tr [class.grand-total]=\\\"row.name == null\\\" *ngFor=\\\"let row of ent_report_data\\\">\\r\\n                                      <td>{{row.category}}</td>\\r\\n                                      <td>{{row.item_group}}</td>\\r\\n                                      <td>{{row.name}}</td>\\r\\n                                      <td class=\\\"text-center\\\">{{row.qty | currency:' '}}</td>\\r\\n                                      <td class=\\\"text-center\\\">{{row.amount | currency:' '}}</td>\\r\\n                                  </tr>\\r\\n                              </tbody>\\r\\n\\r\\n                              <tfoot *ngIf=\\\"ent_report_data == null || ent_report_data.length == 0\\\">\\r\\n                                  <tr>\\r\\n                                      <td colspan=\\\"10\\\" class=\\\"text-center\\\"><b>No Data Found</b></td>\\r\\n                                  </tr>\\r\\n                              </tfoot>\\r\\n                          </table>\\r\\n                      </div>\\r\\n\\r\\n\\r\\n                      <hr>\\r\\n                      <h3 class=\\\"text-center\\\">Collection Summary</h3>\\r\\n                      <app-summary [report_summary]=\\\"report_summary\\\"></app-summary>\\r\\n\\r\\n                  </div>\\r\\n              </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          </div>\\r\\n      </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reports/x-report/x-report.component.html\n// module id = ./src/app/reports/x-report/x-report.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ReportsService } from '../../services/reports.service';\r\n\r\n@Component({\r\n  selector: 'app-x-report',\r\n  templateUrl: './x-report.component.html',\r\n  styleUrls: ['./x-report.component.css']\r\n})\r\nexport class XReportComponent implements OnInit {\r\n\r\n  report_data:any;\r\n  ent_report_data:any = new Array();\r\n  report_summary:any = {\r\n    'receipt_detail': [],\r\n    'st_and_discount': {\r\n      'total_sales_tax': 0,\r\n      'total_discount': 0,\r\n    }\r\n  };\r\n\r\n  from: '';\r\n  to: '';\r\n\r\n  constructor(\r\n    private reportsService: ReportsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  showReport(event:any)\r\n  {\r\n    this.reportsService.salesReportByItem(event.from, event.to, event.show_actual)\r\n      .subscribe( data => { \r\n\r\n        this.from = event.from;\r\n        this.to = event.to;\r\n\r\n        this.report_data = data['report_detail']['orders'];\r\n        this.ent_report_data = data['report_detail']['ent_orders'];\r\n        this.report_summary = data['report_summary']; \r\n\r\n        this.report_data.forEach(element => {\r\n          element.qty = +element.qty;\r\n          element.amount = +element.amount;\r\n        });\r\n\r\n      });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reports/x-report/x-report.component.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router:Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\r\n    \r\n    let is_logged_in = this.authService.isLoggedIn()\r\n\r\n    if(!is_logged_in)\r\n    {\r\n      console.log('sending to login page');\r\n      this.router.navigate(['/login']);\r\n    }\r\n      \r\n\r\n    return is_logged_in;\r\n\r\n  }\r\n  \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/auth-guard.service.ts","import { Injectable } from '@angular/core';\r\nimport { ConfigService } from '../services/config.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  constructor(private config: ConfigService, private http: HttpClient, private router: Router) { }\r\n\r\n  login( username:string, password:string )\r\n  {\r\n    \r\n    let fd = new FormData();\r\n\r\n    fd.append('username', username);\r\n    fd.append('password', password);\r\n\r\n    for (let key in this.config.auth_data) {\r\n        let value = this.config.auth_data[key];\r\n        // Use `key` and `value`\r\n        fd.append( key, value );\r\n        \r\n        \r\n    }\r\n\r\n    return this.http.post(this.config.base_url + '/oauth/token', fd)\r\n      \r\n  }\r\n\r\n  logout()\r\n  {\r\n    localStorage.setItem('access_token', '');\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n  isLoggedIn()\r\n  {\r\n    let is_logged_in = localStorage.getItem(\"access_token\") === null || localStorage.getItem(\"access_token\") == \"\" ? false : true;\r\n\r\n    return is_logged_in;\r\n  }\r\n\r\n  getLoggedInUserInfo()\r\n  {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders(\r\n        { \r\n          'Accept': 'application/json',\r\n          'Authorization': 'Bearer ' + localStorage.getItem('access_token'),\r\n        }\r\n      )\r\n    };\r\n\r\n    return this.http.post(this.config.base_url + '/api/get-logged-in-user-info', null, httpOptions);\r\n  }\r\n\r\n  getPermissions(user_id?)\r\n  {\r\n    let permissions_url = '/api/get-permissions';\r\n    permissions_url = user_id ? permissions_url + '?user_id=' + user_id : permissions_url;\r\n    \r\n    return this.http.get(this.config.base_url + permissions_url);\r\n  }\r\n\r\n  hasPermission(permission, user_id?)\r\n  {\r\n    let permissions_url = '/api/has-permission?permission=' + permission;\r\n    permissions_url = user_id ? permissions_url + '&user_id=' + user_id : permissions_url;\r\n    \r\n    return this.http.get(this.config.base_url + permissions_url);\r\n  }\r\n\r\n  changePassword(old_password:string, new_password:string)\r\n  {\r\n    let fd = new FormData();\r\n\r\n    fd.append('old_password', old_password);\r\n    fd.append('new_password', new_password);\r\n\r\n    return this.http.post(this.config.base_url + '/api/change-password', fd);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpBackend } from '@angular/common/http';\r\nimport { config } from '../../assets/config';\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n\r\n  base_url = \"http://rms.devzonesolutions.com/public\";\r\n\r\n  auth_data = {\r\n    grant_type: 'password',\r\n    client_id: '2',\r\n    client_secret: 'dRcXHre5hNEiIjGJXqriwykZym5Eh0NRF7OjqPCk',\r\n  };\r\n\r\n  private http: HttpClient;\r\n\r\n  constructor(\r\n    private handler: HttpBackend\r\n  ) {\r\n\r\n    this.http = new HttpClient(handler);\r\n  \r\n    this.base_url = config.base_url;\r\n\r\n    this.http.get('assets/base_url.txt')\r\n      .subscribe((data)=>{\r\n          this.base_url = data['base_url'];\r\n        },\r\n        ()=>{ alert('Unable to base_url from base_url.txt file'); }\r\n      );\r\n\r\n    this.auth_data = config.auth_data;\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/config.service.ts","import { Injectable } from '@angular/core';\r\n\r\nimport * as moment from 'moment';\r\n\r\n@Injectable()\r\nexport class HelperService {\r\n\r\n  constructor() { }\r\n\r\n  toSqlFormat(date: any, format = 'YYYY-MM-DD HH:mm:ss')\r\n  {\r\n    return moment(date).format(format);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/helper.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ConfigService } from './config.service';\r\n\r\n@Injectable()\r\nexport class ItemsService {\r\n\r\n  constructor(private http: HttpClient, private config: ConfigService) { }\r\n\r\n  getItems(show_inactive_also = 0)\r\n  {\r\n    let url = '/api/items';\r\n    url += show_inactive_also == 1 ? '?show_inactive_also=1' : '?show_inactive_also=0';\r\n    return this.http.get(this.config.base_url + url);\r\n  }\r\n\r\n  getItemById(id)\r\n  {\r\n    return this.http.get(this.config.base_url + '/api/items/' + id + '/edit');\r\n  }\r\n\r\n  saveData(data, id?)\r\n  {\r\n    let fd = new FormData();\r\n\r\n    for (let key in data) {\r\n        let value = data[key];\r\n        // Use `key` and `value`\r\n        fd.append( key, value );\r\n    }\r\n\r\n    if(id == null)  // new table\r\n      return this.http.post(this.config.base_url + '/api/items', fd);\r\n    else\r\n    {\r\n      fd.append('_method', 'PUT');\r\n      return this.http.post(this.config.base_url + '/api/items/' + id, fd);\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/items.service.ts","import { Injectable } from '@angular/core';\r\nimport { ConfigService } from './config.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'Rxjs';\r\n\r\n@Injectable()\r\nexport class OrdersService {\r\n\r\n  constructor(private http: HttpClient, private config: ConfigService) { }\r\n\r\n  getOrderEditById(id)\r\n  {\r\n    return this.http.get(this.config.base_url + '/api/get_order_edit/' + id);\r\n  }\r\n\r\n  getOrderById(id)\r\n  {\r\n    return this.http.get(this.config.base_url + '/api/orders/' + id + '/edit');\r\n  }\r\n\r\n  getOrderTypes()\r\n  {\r\n    return this.http.get(this.config.base_url + '/api/order_types');\r\n  }\r\n\r\n  \r\n\r\n  saveOrder(order, deleted_details, id?, other_info?)\r\n  {\r\n    let fd = new FormData();\r\n\r\n    fd.append('order', JSON.stringify(order));\r\n    fd.append('deleted_details', JSON.stringify(deleted_details));\r\n    fd.append('other_info', JSON.stringify(other_info));\r\n\r\n\r\n    if (id == null)  // new order\r\n    {\r\n      return this.http.post(this.config.base_url + '/api/orders', fd);\r\n    }\r\n    else {\r\n      fd.append('_method', 'PUT');\r\n      return this.http.post(this.config.base_url + '/api/orders/' + id, fd);\r\n    }\r\n  }\r\n\r\n  saveDiscount(order, other_info)\r\n  {\r\n    let fd = new FormData();\r\n\r\n    fd.append('order', JSON.stringify(order));\r\n    fd.append('other_info', JSON.stringify(other_info));\r\n\r\n    return this.http.post(this.config.base_url + '/api/save-order-discount', fd);\r\n    \r\n  }\r\n\r\n  getOpenOrders()\r\n  {\r\n    return this.http.get(this.config.base_url + '/api/open-orders');\r\n  }\r\n\r\n  changeOrderStatus(order_id, status, user_id, password, remarks)\r\n  {\r\n    let data = new FormData();\r\n    data.append('order_id', order_id);\r\n    data.append('status', status);\r\n    data.append('user_id', user_id);\r\n    data.append('password', password);\r\n    data.append('remarks', remarks);\r\n\r\n    return this.http.post(this.config.base_url + '/api/change-order-status', data);\r\n  }\r\n\r\n  closeOrder(order_id, received_through, ent_remarks)\r\n  {\r\n    let data = new FormData();\r\n    data.append('order_id', order_id);\r\n    data.append('received_through', received_through);\r\n    data.append('ent_remarks', ent_remarks);\r\n\r\n    return this.http.post(this.config.base_url + '/api/close-order', data);\r\n  }\r\n\r\n  printForCustomer(order_id)\r\n  {\r\n    return this.http.post(this.config.base_url + '/api/print-for-customer/' + order_id, null);\r\n  }\r\n\r\n  reprintForKitchens(order_id)\r\n  {\r\n    return this.http.post(this.config.base_url + '/api/reprint-for-kitchens/' + order_id, null);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/orders.service.ts","import { Injectable } from '@angular/core';\r\nimport { ConfigService } from './config.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { HelperService } from './helper.service';\r\n\r\n@Injectable()\r\nexport class ReportsService {\r\n  \r\n  constructor(\r\n    private config: ConfigService,\r\n    private http: HttpClient,\r\n    private h: HelperService\r\n  ) { }\r\n\r\n\r\n\r\n  getReportData(from_date, to_date, show_actual, url)\r\n  {\r\n    let params = { \r\n      'from_date': this.h.toSqlFormat(from_date), \r\n      'to_date': this.h.toSqlFormat(to_date),  \r\n      's_a': show_actual,\r\n    };\r\n\r\n    return this.http.get(this.config.base_url + '/api/' + url, { params: params });\r\n  }\r\n\r\n  ratingsReport(from_date, to_date, show_actual)\r\n  {\r\n    return this.getReportData(from_date, to_date, show_actual, 'ratings-report');\r\n  }\r\n\r\n  topAndLeastItemsReport(from_date, to_date, show_actual) {\r\n    return this.getReportData(from_date, to_date, show_actual, 'top-least-selling-items-report');\r\n  }\r\n\r\n  editsAfterPrintReport(from_date, to_date, show_actual) {\r\n    return this.getReportData(from_date, to_date, show_actual, 'edits-after-print-report');\r\n  }\r\n\r\n  salesReportByItem(from_date, to_date, show_actual) {\r\n    return this.getReportData(from_date, to_date, show_actual, 'sales-report-by-item');\r\n  }\r\n\r\n  salesReportByOrder(from_date, to_date, show_actual) {\r\n    return this.getReportData(from_date, to_date, show_actual, 'sales-report-by-order');\r\n  }\r\n\r\n  getInvoiceData(invoice_id, invoice_datetime, show_actual)\r\n  {\r\n    let params = { \r\n      'invoice_id': invoice_id, \r\n      'invoice_datetime': invoice_datetime,\r\n      's_a': show_actual,\r\n    };\r\n\r\n    return this.http.get(this.config.base_url + '/api/' + 'get-invoice-data', { params: params });\r\n  }\r\n\r\n  cancelledOrdersReport(from_date, to_date) {\r\n    let params = {\r\n      'from_date': this.h.toSqlFormat(from_date),\r\n      'to_date': this.h.toSqlFormat(to_date),\r\n      //'s_a': show_actual,\r\n    };\r\n\r\n    return this.http.get(this.config.base_url + '/api/cancelled-orders-report', { params: params });\r\n  }\r\n\r\n  collectionReport(from_date, to_date, show_actual) {\r\n    let params = { \r\n      'from_date': this.h.toSqlFormat(from_date), \r\n      'to_date': this.h.toSqlFormat(to_date),  \r\n      's_a': show_actual,\r\n    };\r\n\r\n    this.http.get(this.config.base_url + '/api/collection-report', { params: params })\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/reports.service.ts","import { Injectable } from '@angular/core';\r\nimport { ConfigService } from './config.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class SettingsService {\r\n\r\n  constructor(\r\n    private config: ConfigService,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getSettings()\r\n  {\r\n    return this.http.get(this.config.base_url + '/api/show-settings');\r\n  }\r\n\r\n  getSettingBySlug(slug)\r\n  {\r\n    return this.http.get(this.config.base_url + '/api/get-setting-by-slug?slug=' + slug);\r\n  }\r\n\r\n  saveSettings(settings)\r\n  {\r\n    let fd = new FormData();\r\n\r\n    fd.append('settings', JSON.stringify(settings));\r\n\r\n    return this.http.post(this.config.base_url + '/api/save-settings', fd);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/settings.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ConfigService } from './config.service';\r\n\r\n@Injectable()\r\nexport class TablesService {\r\n\r\n  constructor(private http: HttpClient, private config: ConfigService) { }\r\n\r\n  getTables()\r\n  {\r\n    return this.http.get(this.config.base_url + '/api/tables');\r\n  }\r\n\r\n  getTableById(id)\r\n  {\r\n    return this.http.get(this.config.base_url + '/api/tables/' + id + '/edit');\r\n  }\r\n\r\n  getPortions()\r\n  {\r\n    return this.http.get(this.config.base_url + '/api/get-portions');\r\n  }\r\n\r\n  getFreeTables() {\r\n    return this.http.get(this.config.base_url + '/api/free_tables');\r\n  }\r\n\r\n  saveUserData(data, id?)\r\n  {\r\n    let fd = new FormData();\r\n\r\n    for (let key in data) {\r\n        let value = data[key];\r\n        // Use `key` and `value`\r\n        fd.append( key, value );\r\n    }\r\n\r\n    if(id == null)  // new table\r\n      return this.http.post(this.config.base_url + '/api/tables', fd);\r\n    else\r\n    {\r\n      fd.append('_method', 'PUT');\r\n      return this.http.post(this.config.base_url + '/api/tables/' + id, fd);\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/tables.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ConfigService } from '../services/config.service';\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n\r\n  constructor(private http: HttpClient, private config: ConfigService) { }\r\n\r\n  getUserById(id:any)\r\n  {\r\n    return this.http.get(this.config.base_url + '/api/users/' + id + '/edit');\r\n  }\r\n\r\n  getAllPermissions()\r\n  {\r\n    return this.http.get(this.config.base_url + '/api/get-permissions');\r\n  }\r\n\r\n  saveUserData(data, id?)\r\n  {\r\n    let fd = new FormData();\r\n\r\n    for (let key in data) {\r\n        let value = data[key];\r\n        // Use `key` and `value`\r\n        fd.append( key, value );\r\n    }\r\n\r\n    if(id == null)  // new user\r\n      return this.http.post(this.config.base_url + '/api/users', fd);\r\n    else\r\n    {\r\n      fd.append('_method', 'PUT');\r\n      return this.http.post(this.config.base_url + '/api/users/' + id, fd);\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/users.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/settings/settings.component.css\n// module id = ./src/app/settings/settings.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n    <h1>\\r\\n        Settings\\r\\n        <!-- <small>Version 2.0</small> -->\\r\\n\\r\\n\\r\\n\\r\\n    </h1>\\r\\n\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-primary\\\">\\r\\n\\r\\n                <div class=\\\"box-body\\\">\\r\\n\\r\\n\\r\\n                    <table class=\\\"table table-condensed table-bordered table-hover\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>Settings Group</th>\\r\\n                                <th>Setting</th>\\r\\n                                <th>Value</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let setting of settings\\\">\\r\\n                                <td>{{setting.group}}</td>\\r\\n                                <td>{{setting.setting}}</td>\\r\\n                                <td>\\r\\n                                    <input type=\\\"{{setting.type}}\\\" [(ngModel)]=\\\"setting.value\\\" class=\\\"form-control\\\" pattern=\\\"\\\" title=\\\"\\\">\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n\\r\\n                    <br>\\r\\n                    <div class=\\\"text-right\\\">\\r\\n                        <button (click)=\\\"saveSettings()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n                  <i class=\\\"fa fa-save\\\"></i>\\r\\n                  Save\\r\\n                </button>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/settings/settings.component.html\n// module id = ./src/app/settings/settings.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { SettingsService } from '../services/settings.service';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  settings:any = Array();\r\n\r\n  constructor(\r\n    private settingsService: SettingsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.settingsService.getSettings()\r\n      .subscribe( data => this.settings = data );\r\n  }\r\n\r\n  saveSettings()\r\n  {\r\n    this.settingsService.saveSettings(this.settings)\r\n      .subscribe(\r\n        data => {\r\n          alert(data['message']);\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/settings/settings.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/table/table.component.css\n// module id = ./src/app/table/table.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n    <h1>\\r\\n        Table\\r\\n        <!-- <small>Version 2.0</small> -->\\r\\n\\r\\n\\r\\n\\r\\n    </h1>\\r\\n\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-primary\\\">\\r\\n\\r\\n                <div class=\\\"box-body\\\">\\r\\n\\r\\n                    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f.value, form_type)\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\r\\n\\r\\n\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label col-sm-2\\\" for=\\\"portion\\\">Portion / Floor:</label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"portion\\\" name=\\\"portion\\\" [(ngModel)]=\\\"table.portion\\\" #portion_input=ngModel required>\\r\\n                                <div class=\\\"validation-error\\\" *ngIf=\\\"portion_input.errors?.required\\\">\\r\\n                                    Should not be empty.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-sm-2\\\"></div>\\r\\n                        <div class=\\\"col-sm-10\\\">\\r\\n                            Portions:\\r\\n                            <ul>\\r\\n                                <li *ngFor=\\\"let portion of portions\\\">\\r\\n\\r\\n                                    <button type=\\\"button\\\" (click)=\\\"selectPortion(portion.portion)\\\" class=\\\"btn btn-xs btn-default\\\">{{portion.portion}}</button>\\r\\n\\r\\n                                </li>\\r\\n                            </ul>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label col-sm-2\\\" for=\\\"name\\\">Table Number / Name</label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"table.name\\\" #name_input=ngModel required>\\r\\n\\r\\n                                <div class=\\\"validation-error\\\" *ngIf=\\\"name_input.errors?.required\\\">\\r\\n                                    Should not be empty.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-sm-10 col-sm-offset-2\\\">\\r\\n                                <button type=\\\"submit\\\" [disabled]=\\\"!f.form.valid || is_loading\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/table/table.component.html\n// module id = ./src/app/table/table.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { TablesService } from '../services/tables.service';\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.css']\r\n})\r\nexport class TableComponent implements OnInit {\r\n\r\n  form_type=\"New\";\r\n  table:any = {\r\n    id: null,\r\n    name: '',\r\n    portion: '',\r\n  };\r\n\r\n  portions:any=Array();\r\n\r\n  is_loading:boolean = false;\r\n\r\n  constructor(\r\n    private router: Router, \r\n    private route: ActivatedRoute, \r\n    private tablesService: TablesService,\r\n    private authService: AuthService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(\r\n      (data)=>{\r\n        if( data.id != null )\r\n        {\r\n          this.form_type=\"Edit\";\r\n\r\n          this.is_loading = true;\r\n          this.tablesService.getTableById(data.id)\r\n            .subscribe(\r\n              (data)=>{\r\n                this.table = data;\r\n                this.is_loading = false;\r\n\r\n              }\r\n            );\r\n        }\r\n        \r\n      }\r\n    );\r\n\r\n\r\n    this.tablesService.getPortions()\r\n      .subscribe( data => { this.portions = data; } )\r\n  }\r\n\r\n  selectPortion(portion)\r\n  {\r\n    this.table.portion = portion;\r\n  }\r\n\r\n  onSubmit(value, form_type)\r\n  {\r\n    this.is_loading = true;\r\n\r\n    let id = this.form_type == \"New\" ? null : this.table.id;\r\n\r\n    this.tablesService.saveUserData(value, id)\r\n        .finally(\r\n          ()=>{ this.is_loading = false; }\r\n        )\r\n        .subscribe(\r\n          (data)=>{\r\n            this.is_loading = false;\r\n\r\n            alert(data['message']);\r\n            if( data['success'] == true )\r\n            {\r\n              this.router.navigate(['/tables']);\r\n            }\r\n          }\r\n        );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/table/table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/tables-and-orders/tables-and-orders.component.css\n// module id = ./src/app/tables-and-orders/tables-and-orders.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n    <h1>\\r\\n        Tables and Orders\\r\\n        <!-- <small>Version 2.0</small> -->\\r\\n    </h1>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-primary\\\">\\r\\n\\r\\n                <div class=\\\"box-body\\\">\\r\\n\\r\\n                    <div class=\\\"\\\">\\r\\n                        <!-- div for buttons -->\\r\\n                        <a class=\\\"btn btn-success pull-right\\\" routerLink=\\\"/add-order\\\" role=\\\"button\\\"> <i class=\\\"fa fa-plus-circle\\\"></i> New Order</a>\\r\\n                        <button (click)=\\\"refreshData()\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\"><i class=\\\"fa fa-refresh\\\"></i> Refresh</button>\\r\\n                    </div>\\r\\n                    <br>\\r\\n\\r\\n                    <div class=\\\"box box-danger\\\">\\r\\n                        <div class=\\\"box-header with-border\\\">\\r\\n                            <i class=\\\"fa fa-list\\\"></i>\\r\\n                            <h3 class=\\\"box-title\\\">Open Orders</h3>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"box-body\\\">\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div *ngFor=\\\"let order of open_orders\\\" class=\\\"col-sm-3\\\">\\r\\n\\r\\n                                    <app-open-order (modalOpen)=\\\"stopInterval()\\\" (modalClose)=\\\"startInterval()\\\" [order]=\\\"order\\\"></app-open-order>\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"box box-success\\\">\\r\\n                        <div class=\\\"box-header with-border\\\">\\r\\n                            <i class=\\\"fa fa-table\\\"></i>\\r\\n                            <h3 class=\\\"box-title\\\">Free Tables</h3>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"box-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div *ngFor=\\\"let table of free_tables\\\" class=\\\"col-sm-3\\\">\\r\\n                                    <div>\\r\\n                                        <div class=\\\"free-table text-center\\\">\\r\\n                                            <p>Portion/Floor: <b>{{table.portion}}</b></p>\\r\\n                                            <h2>{{table.name}}</h2>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"box box-danger\\\">\\r\\n                        <div class=\\\"box-header with-border\\\">\\r\\n                            <i class=\\\"fa fa-table\\\"></i>\\r\\n                            <h3 class=\\\"box-title\\\">Reserved Tables</h3>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"box-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div *ngFor=\\\"let table of reserved_tables\\\" class=\\\"col-sm-3\\\">\\r\\n                                    <div>\\r\\n                                        <div class=\\\"reserved-table text-center\\\">\\r\\n                                            <p>Portion/Floor: <b>{{table.portion}}</b></p>\\r\\n                                            <h2>{{table.name}}</h2>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/tables-and-orders/tables-and-orders.component.html\n// module id = ./src/app/tables-and-orders/tables-and-orders.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { OrdersService } from '../services/orders.service';\r\nimport { TablesService } from '../services/tables.service';\r\n\r\n@Component({\r\n  selector: 'app-tables-and-orders',\r\n  templateUrl: './tables-and-orders.component.html',\r\n  styleUrls: ['./tables-and-orders.component.css']\r\n})\r\nexport class TablesAndOrdersComponent implements OnInit {\r\n\r\n  open_orders:any = Array();\r\n  free_tables:any = Array();\r\n  reserved_tables:any = Array();\r\n\r\n  refresh_interval_id:any;\r\n\r\n  constructor(\r\n    private ordersService: OrdersService,\r\n    private tablesService: TablesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.startInterval();\r\n\r\n  }\r\n\r\n  ngOnDestroy()\r\n  {\r\n    this.stopInterval();\r\n  }\r\n\r\n  startInterval()\r\n  {\r\n    this.refreshData();\r\n\r\n    this.refresh_interval_id = setInterval(()=>{\r\n      this.refreshData();\r\n    }, 10000);\r\n  }\r\n  stopInterval()\r\n  {\r\n    if(this.refresh_interval_id)\r\n    {\r\n      clearInterval(this.refresh_interval_id);\r\n    }\r\n  }\r\n  \r\n\r\n  refreshData()\r\n  {\r\n    this.ordersService.getOpenOrders()\r\n      .subscribe( data => { this.open_orders = data;} );\r\n\r\n    this.tablesService.getFreeTables()\r\n      .subscribe( data => { this.free_tables = data;} );    \r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/tables-and-orders/tables-and-orders.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/tables/tables.component.css\n// module id = ./src/app/tables/tables.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n    <h1>\\r\\n        Tables\\r\\n        <!-- <small>Version 2.0</small> -->\\r\\n\\r\\n        <a *ngIf=\\\"can_add_new\\\" class=\\\"btn btn-sm btn-primary\\\" routerLink=\\\"/table\\\" role=\\\"button\\\"><i class=\\\"fa fa-plus-circle\\\"></i> Add New</a>\\r\\n\\r\\n    </h1>\\r\\n\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-primary\\\">\\r\\n\\r\\n                <div class=\\\"box-body\\\">\\r\\n\\r\\n                    <div *ngIf=\\\"tables != null\\\">\\r\\n                        <div *ngFor=\\\"let key of tables | keys\\\">\\r\\n\\r\\n                            <div class=\\\"panel panel-primary\\\">\\r\\n                                <div class=\\\"panel-heading\\\">\\r\\n                                    <h3 class=\\\"panel-title\\\">{{key}}</h3>\\r\\n                                </div>\\r\\n                                <div class=\\\"panel-body\\\">\\r\\n\\r\\n                                    <table class=\\\"table table-bordered table-condensed table-hover\\\">\\r\\n                                        <thead>\\r\\n                                            <tr>\\r\\n                                                <th>Table Name / Number</th>\\r\\n                                                <th>Action</th>\\r\\n                                            </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody>\\r\\n                                            <tr *ngFor=\\\"let table of tables[key]\\\">\\r\\n                                                <td>{{table.name}}</td>\\r\\n                                                <td>\\r\\n\\r\\n                                                    <a *ngIf=\\\"can_edit\\\" class=\\\"btn btn-xs btn-primary\\\" routerLink=\\\"/table/{{table.id}}\\\" role=\\\"button\\\">\\r\\n                                                        <i class=\\\"fa fa-edit\\\"></i> Edit\\r\\n                                                    </a>\\r\\n\\r\\n                                                </td>\\r\\n                                            </tr>\\r\\n                                        </tbody>\\r\\n                                    </table>\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/tables/tables.component.html\n// module id = ./src/app/tables/tables.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { TablesService } from '../services/tables.service';\r\n\r\n@Component({\r\n  selector: 'app-tables',\r\n  templateUrl: './tables.component.html',\r\n  styleUrls: ['./tables.component.css']\r\n})\r\nexport class TablesComponent implements OnInit {\r\n\r\n  tables;\r\n  can_add_new=false;\r\n  can_edit=false;\r\n\r\n  constructor(private authService: AuthService,\r\n    private tablesService: TablesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.tablesService.getTables()\r\n      .subscribe( data => { this.tables = data; } );\r\n\r\n    this.authService.hasPermission('add-new-table')\r\n      .subscribe( data => { this.can_add_new = data['has_permission']; } );\r\n\r\n    this.authService.hasPermission('edit-table')\r\n      .subscribe( data => { this.can_edit = data['has_permission']; } );\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/tables/tables.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-form/user-form.component.css\n// module id = ./src/app/user-form/user-form.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n    <h1>\\r\\n        {{form_type}} User\\r\\n        <!-- <small>Version 2.0</small> -->\\r\\n\\r\\n\\r\\n\\r\\n    </h1>\\r\\n\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-primary\\\">\\r\\n\\r\\n                <div class=\\\"box-body\\\">\\r\\n\\r\\n\\r\\n\\r\\n                    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f.value, form_type)\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label col-sm-2\\\" for=\\\"name\\\">Name:</label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"user.name\\\" #name_input=ngModel required>\\r\\n\\r\\n                                <div class=\\\"validation-error\\\" *ngIf=\\\"name_input.errors?.required\\\">\\r\\n                                    Should not be empty.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label col-sm-2\\\" for=\\\"email\\\">User ID:</label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" #email_input=ngModel required email>\\r\\n                                <div class=\\\"validation-error\\\" *ngIf=\\\"email_input.errors?.email\\\">\\r\\n                                    Email not valid.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label col-sm-2\\\" for=\\\"password\\\">Password</label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" [placeholder]=\\\"form_type == 'Edit' ? 'Leave empty if you do not want to change password' : ''\\\" [required]=\\\"form_type == 'New' ? true : false\\\" #password_input=ngModel>\\r\\n\\r\\n                                <div class=\\\"validation-error\\\" *ngIf=\\\"password_input.errors?.required\\\">\\r\\n                                    Should not be empty.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\r\\n                                <div class=\\\"checkbox\\\">\\r\\n                                    <label><input type=\\\"checkbox\\\" name=\\\"is_admin\\\" [(ngModel)]=\\\"user.is_admin\\\"> Is Admin</label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\r\\n                                <div class=\\\"checkbox\\\">\\r\\n                                    <label><input type=\\\"checkbox\\\" name=\\\"is_activated\\\" [(ngModel)]=\\\"user.is_activated\\\"> Is Activated</label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div [class.hidden]=\\\"user.is_admin\\\" class=\\\"box box-success\\\">\\r\\n                            <div class=\\\"box-header with-border\\\">\\r\\n                                <h3 class=\\\"box-title\\\">Permissions</h3>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"box-body\\\">\\r\\n\\r\\n                                <div *ngFor=\\\"let key of permissions | keys\\\">\\r\\n\\r\\n                                    <div class=\\\"panel panel-primary\\\">\\r\\n                                        <div class=\\\"panel-heading\\\">\\r\\n                                            <h3 class=\\\"panel-title\\\">{{key}}</h3>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"panel-body\\\">\\r\\n\\r\\n                                            <table class=\\\"table table-bordered table-condensed table-hover\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th>Permission</th>\\r\\n                                                        <th>Access</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n\\r\\n                                                    <tr *ngFor=\\\"let permission of permissions[key]\\\">\\r\\n                                                        <td class=\\\"col-md-8\\\">{{permission.name}}</td>\\r\\n\\r\\n                                                        <td class=\\\"col-md-4\\\">\\r\\n                                                            <input [ngModel]=\\\"permission.access == 1 ? true : false\\\" type=\\\"checkbox\\\" name=\\\"permissions[{{permission.id}}]\\\">\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n\\r\\n                                                </tbody>\\r\\n                                            </table>\\r\\n\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-sm-10 col-sm-offset-2\\\">\\r\\n                                <button type=\\\"submit\\\" [disabled]=\\\"!f.form.valid || is_loading\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-form/user-form.component.html\n// module id = ./src/app/user-form/user-form.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UsersService } from '../services/users.service';\r\nimport { AuthService } from '../services/auth.service';\r\nimport 'rxjs/add/operator/finally';\r\n\r\n@Component({\r\n  selector: 'app-user-form',\r\n  templateUrl: './user-form.component.html',\r\n  styleUrls: ['./user-form.component.css']\r\n})\r\nexport class UserFormComponent implements OnInit {\r\n\r\n  form_type=\"New\";\r\n  user:any = {\r\n    id: null,\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    is_admin: false,\r\n    is_activated: true,\r\n  };\r\n\r\n  permissions:any = Array();\r\n\r\n  is_loading:boolean = false;\r\n\r\n  constructor(\r\n    private router: Router, \r\n    private route: ActivatedRoute, \r\n    private usersService: UsersService,\r\n    private authService: AuthService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    \r\n    this.route.params.subscribe(\r\n      (data)=>{\r\n        if( data.id != null )\r\n        {\r\n          this.form_type=\"Edit\";\r\n\r\n          this.is_loading = true;\r\n          this.usersService.getUserById(data.id)\r\n            .subscribe(\r\n              (data)=>{\r\n                this.user = data;\r\n                this.user.password = '';\r\n\r\n                this.authService.getPermissions(data['id'])\r\n                  .subscribe(\r\n                    (permissions_data)=>{\r\n                      this.permissions = permissions_data;\r\n                      \r\n                      this.is_loading = false;\r\n                    }\r\n                  )\r\n\r\n              }\r\n            );\r\n        }\r\n        else\r\n        {\r\n          this.is_loading = true;\r\n          this.authService.getPermissions()\r\n            .subscribe(\r\n              (permissions_data)=>{\r\n                this.permissions = permissions_data;\r\n                this.is_loading = false;\r\n              }\r\n            )\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  onSubmit(value, form_type)\r\n  {\r\n    this.is_loading = true;\r\n\r\n    let id = this.form_type == \"New\" ? null : this.user.id;\r\n\r\n    this.usersService.saveUserData(value, id)\r\n        .finally(\r\n          ()=>{ this.is_loading = false; }\r\n        )\r\n        .subscribe(\r\n          (data)=>{\r\n            this.is_loading = false;\r\n\r\n            alert(data['message']);\r\n            if( data['success'] == true )\r\n            {\r\n              this.router.navigate(['/users']);\r\n            }\r\n          }\r\n        );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-form/user-form.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/users.component.css\n// module id = ./src/app/users/users.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\r\\n    <h1>\\r\\n        Users\\r\\n        <!-- <small>Version 2.0</small> -->\\r\\n\\r\\n        <a *ngIf=\\\"can_add_new\\\" class=\\\"btn btn-sm btn-primary\\\" routerLink=\\\"/user\\\" role=\\\"button\\\"><i class=\\\"fa fa-plus-circle\\\"></i> Add New</a>\\r\\n\\r\\n    </h1>\\r\\n\\r\\n</section>\\r\\n\\r\\n<section class=\\\"content\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"box box-primary\\\">\\r\\n\\r\\n                <div class=\\\"box-body\\\">\\r\\n\\r\\n                    <div *ngIf=\\\"users_data != null\\\">\\r\\n                        <p-dataTable [lazy]=\\\"true\\\" [value]=\\\"users_data.data\\\" [rows]=\\\"users_data.per_page\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"5\\\" [totalRecords]=\\\"users_data.total\\\" (onLazyLoad)=\\\"loadLazy($event)\\\">\\r\\n                            <p-header>List of Users</p-header>\\r\\n                            <p-column field=\\\"name\\\" header=\\\"Name\\\"></p-column>\\r\\n                            <p-column field=\\\"email\\\" header=\\\"User ID\\\"></p-column>\\r\\n                            <p-column field=\\\"is_admin\\\" header=\\\"Is Admin\\\">\\r\\n                                <ng-template let-col let-user=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                    <div class=\\\"text-center\\\">\\r\\n                                        <span class=\\\"label {{ user[col.field] == 1 ? 'label-success' : 'label-danger' }}\\\">\\r\\n                                      {{ user[col.field] == 1 ? 'Yes' : 'No' }}\\r\\n                                  </span>\\r\\n                                    </div>\\r\\n                                </ng-template>\\r\\n                            </p-column>\\r\\n                            <p-column field=\\\"is_activated\\\" header=\\\"Is Activated\\\">\\r\\n                                <ng-template let-col let-user=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                    <div class=\\\"text-center\\\">\\r\\n                                        <span class=\\\"label {{ user[col.field] == 1 ? 'label-success' : 'label-danger' }}\\\">\\r\\n                                        {{ user[col.field] == 1 ? 'Yes' : 'No' }}\\r\\n                                    </span>\\r\\n                                    </div>\\r\\n                                </ng-template>\\r\\n                            </p-column>\\r\\n                            <p-column field=\\\"id\\\" header=\\\"Action\\\">\\r\\n                                <ng-template let-col let-user=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                    <div class=\\\"text-center\\\">\\r\\n                                        <a *ngIf=\\\"can_edit\\\" class=\\\"btn btn-xs btn-primary\\\" routerLink=\\\"/user/{{user[col.field]}}\\\" role=\\\"button\\\"> <i class=\\\"fa fa-edit\\\"></i> Edit</a>\\r\\n                                    </div>\\r\\n                                </ng-template>\\r\\n                            </p-column>\\r\\n\\r\\n                        </p-dataTable>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/users.component.html\n// module id = ./src/app/users/users.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport 'rxjs/add/operator/filter';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ConfigService } from '../services/config.service';\r\nimport { LazyLoadEvent } from 'primeng/primeng';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css'],\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  users_data:any;\r\n\r\n  can_add_new=false;\r\n  can_edit=false;\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, \r\n    private http: HttpClient, \r\n    private config: ConfigService,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.users_data = Array();\r\n    this.users_data['data'] = Array();\r\n\r\n    this.getUsers();\r\n\r\n    this.authService.hasPermission('add-new-user')\r\n      .subscribe( data => { this.can_add_new = data['has_permission']; } );\r\n\r\n      this.authService.hasPermission('edit-user')\r\n      .subscribe( data => { this.can_edit = data['has_permission']; } );\r\n  }\r\n\r\n  getUsers(page?:any)\r\n  {\r\n    let page_query = page ? '?page=' + page : '';\r\n    this.http.get(this.config.base_url + '/api' + this.router.url + page_query)\r\n      .subscribe(\r\n        (data)=>{\r\n          this.users_data = data;\r\n        }\r\n      );\r\n  }\r\n\r\n  loadLazy(event: LazyLoadEvent) {\r\n      //in a real application, make a remote request to load data using state metadata from event\r\n      //event.first = First row offset\r\n      //event.rows = Number of rows per page\r\n      //event.sortField = Field name to sort with\r\n      //event.sortOrder = Sort order as number, 1 for asc and -1 for dec\r\n      //filters: FilterMetadata object having field as key and filter value, filter matchMode as value\r\n      \r\n      let page_num = Math.trunc( event.first / 10 ) + 1;\r\n      \r\n      this.getUsers(page_num);\r\n\r\n      \r\n  }\r\n\r\n  \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/users.component.ts","export const config = {\r\n    \r\n    //base_url: \"http://192.168.100.7/rms/public\",\r\n    base_url: \"http://localhost/rms/public\",\r\n\r\n    auth_data : {\r\n        grant_type: 'password',\r\n        client_id: '2',\r\n        client_secret: 'dRcXHre5hNEiIjGJXqriwykZym5Eh0NRF7OjqPCk',\r\n    }\r\n  \r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/assets/config.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}